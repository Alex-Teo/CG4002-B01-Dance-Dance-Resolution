[{"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js":"1","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js":"3","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js":"4","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\History.js":"5","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js":"6","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js":"7","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\Dashboard.js":"8","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js":"9","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js":"10","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js":"11","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js":"12"},{"size":519,"mtime":1632880674571,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1629614679416,"results":"15","hashOfConfig":"14"},{"size":622,"mtime":1632886941555,"results":"16","hashOfConfig":"14"},{"size":1130,"mtime":1633855578994,"results":"17","hashOfConfig":"14"},{"size":286,"mtime":1631838605892,"results":"18","hashOfConfig":"14"},{"size":1713,"mtime":1632886679659,"results":"19","hashOfConfig":"14"},{"size":3884,"mtime":1633855511870,"results":"20","hashOfConfig":"14"},{"size":6288,"mtime":1633857818551,"results":"21","hashOfConfig":"14"},{"size":1062,"mtime":1632886928137,"results":"22","hashOfConfig":"14"},{"size":1255,"mtime":1633857321339,"results":"23","hashOfConfig":"14"},{"size":1991,"mtime":1633857343272,"results":"24","hashOfConfig":"14"},{"size":1809,"mtime":1633662375186,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rbgyic",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js",[],["55","56"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\History.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\Dashboard.js",["57","58"],"import \"./Dashboard.css\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport CoachCard from \"../components/CoachCard\";\r\nimport Analytics from \"../components/Analytics\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Dashboard = () => {\r\n  // ---------------- useState ---------------- //\r\n\r\n  // useState for coach data\r\n  const [currentCoachData, setCurrentCoachData] = useState({\r\n    actualDance: \"No Coach\",\r\n    actualPositions: [1, 2, 3],\r\n  });\r\n\r\n  // Use state for raw data\r\n  // Array of objects\r\n  const [emgArray, setEmgArray] = useState([\r\n    {\r\n      d1Emg: 0,\r\n      d2Emg: 0,\r\n      d3Emg: 0,\r\n    },\r\n  ]);\r\n\r\n  // Array of objects - acc\r\n  const [d1HandAccArray, setD1HandAccArray] = useState([\r\n    {\r\n      aX: 0,\r\n      aY: 0,\r\n      aZ: 0,\r\n    },\r\n  ]);\r\n  const [d2HandAccArray, setD2HandAccArray] = useState([\r\n    {\r\n      aX: 0,\r\n      aY: 0,\r\n      aZ: 0,\r\n    },\r\n  ]);\r\n  const [d3HandAccArray, setD3HandAccArray] = useState([\r\n    {\r\n      aX: 0,\r\n      aY: 0,\r\n      aZ: 0,\r\n    },\r\n  ]);\r\n\r\n  // Array of objects - gyro\r\n  const [d1HandGyroArray, setD1HandGyroArray] = useState([\r\n    {\r\n      gX: 0,\r\n      gY: 0,\r\n      gZ: 0,\r\n    },\r\n  ]);\r\n  const [d2HandGyroArray, setD2HandGyroArray] = useState([\r\n    {\r\n      gX: 0,\r\n      gY: 0,\r\n      gZ: 0,\r\n    },\r\n  ]);\r\n  const [d3HandGyroArray, setD3HandGyroArray] = useState([\r\n    {\r\n      gX: 0,\r\n      gY: 0,\r\n      gZ: 0,\r\n    },\r\n  ]);\r\n\r\n  //useState for processed data\r\n  const [currentProcessedData, setCurrentProcessedData] = useState({\r\n    predictedDance: \"Not Dancing\",\r\n    predictedPos: [1, 2, 3],\r\n    syncDelay: 0,\r\n  });\r\n\r\n  var data = 0;\r\n\r\n  // ---------------- Sockets ---------------- //\r\n  useEffect(() => {\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n\r\n    // Client-server socket initialized\r\n    socket.on(\"connect\", () => {\r\n      console.log(`Client connected with socket.io ID: ${socket.id}`);\r\n    });\r\n\r\n    // Sockets for coach data\r\n    // {actualDance:string, actualPositions:array}\r\n    socket.on(\"newCoachData\", (coachData) => {\r\n      setCurrentCoachData(coachData);\r\n      // console.log(\"coach\", currentCoachData);\r\n    });\r\n\r\n    // Sockets for raw data\r\n    // {aX:num, aY:num, aZ:num, gX:num, gY:num, gZ:num}\r\n    socket.on(\"newD1HandData\", (FinalData) => {\r\n      let accArray = d1HandAccArray;\r\n      let gyroArray = d1HandGyroArray;\r\n      accArray.push(FinalData.acc);\r\n      gyroArray.push(FinalData.gyro);\r\n      setD1HandAccArray(accArray);\r\n      setD1HandGyroArray(gyroArray);\r\n      // console.log(`Data Group ${data}`);\r\n      // data += 1;\r\n      // console.log(\"d1\", d1HandAccArray, d1HandGyroArray);\r\n    });\r\n\r\n    socket.on(\"newD2HandData\", (FinalData) => {\r\n      let accArray = d2HandAccArray;\r\n      let gyroArray = d2HandGyroArray;\r\n      accArray.push(FinalData.acc);\r\n      gyroArray.push(FinalData.gyro);\r\n      setD2HandAccArray(accArray);\r\n      setD2HandGyroArray(gyroArray);\r\n      // console.log(\"d2\", d2HandAccArray, d2HandGyroArray);\r\n    });\r\n\r\n    socket.on(\"newD3HandData\", (FinalData) => {\r\n      let accArray = d3HandAccArray;\r\n      let gyroArray = d3HandGyroArray;\r\n      accArray.push(FinalData.acc);\r\n      gyroArray.push(FinalData.gyro);\r\n      setD3HandAccArray(accArray);\r\n      setD3HandGyroArray(gyroArray);\r\n      // console.log(\"d3\", d3HandAccArray, d3HandGyroArray);\r\n    });\r\n\r\n    // Socket for Emg data\r\n    // {d1Emg:num, d2Emg:num, d3Emg:num}\r\n    socket.on(\"newEmgData\", (FinalData) => {\r\n      let newArray = emgArray;\r\n      newArray.push(FinalData);\r\n      setEmgArray(newArray);\r\n      // console.log(\"emg1\", emgArray);\r\n    });\r\n\r\n    // Sockets for processed data\r\n    // {predictedDance:string, predictedPos:array, syncDelay:number}\r\n    socket.on(\"newProcessedData\", (ProcessedData) => {\r\n      setCurrentProcessedData(ProcessedData);\r\n      // console.log(\"processed\", currentProcessedData);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboardWrapper\">\r\n      <ScreenHeader\r\n        screenTitle=\"Dashboard\"\r\n        screenDesc=\"A closer look at your performance\"\r\n      />\r\n\r\n      <div className=\"analytics\">\r\n        <div className=\"users\">\r\n          <UserCard\r\n            dancerId=\"Dancer 1\"\r\n            syncDelay={currentProcessedData.syncDelay}\r\n            currentDance={currentProcessedData.predictedDance}\r\n            currentPos={currentProcessedData.predictedPos.indexOf(1)}\r\n            coachDance={currentCoachData.actualDance}\r\n            coachPos={currentCoachData.actualPositions}\r\n          />\r\n          <UserCard\r\n            dancerId=\"Dancer 2\"\r\n            syncDelay={currentProcessedData.syncDelay}\r\n            currentDance={currentProcessedData.predictedDance}\r\n            currentPos={currentProcessedData.predictedPos.indexOf(2)}\r\n            coachDance={currentCoachData.actualDance}\r\n            coachPos={currentCoachData.actualPositions}\r\n          />\r\n          <UserCard\r\n            dancerId=\"Dancer 3\"\r\n            syncDelay={currentProcessedData.syncDelay}\r\n            currentDance={currentProcessedData.predictedDance}\r\n            currentPos={currentProcessedData.predictedPos.indexOf(3)}\r\n            coachDance={currentCoachData.actualDance}\r\n            coachPos={currentCoachData.actualPositions}\r\n          />\r\n          <div className=\"graph\">\r\n            <Analytics\r\n              d1HandAccArray={d1HandAccArray.slice(-20)}\r\n              d2HandAccArray={d2HandAccArray.slice(-20)}\r\n              d3HandAccArray={d3HandAccArray.slice(-20)}\r\n              d1HandGyroArray={d1HandGyroArray.slice(-20)}\r\n              d2HandGyroArray={d2HandGyroArray.slice(-20)}\r\n              d3HandGyroArray={d3HandGyroArray.slice(-20)}\r\n              emgArray={emgArray.slice(-20)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"coach\">\r\n          <CoachCard\r\n            currentDance={currentCoachData.actualDance}\r\n            actualPositions={currentCoachData.actualPositions}\r\n            dancerDance={currentProcessedData.predictedDance}\r\n            dancerPos={currentProcessedData.predictedPos}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js",["59"],"import \"./ScreenHeader.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction ScreenHeader({ screenTitle, screenDesc }) {\r\n  const [currentDateTime, setDateTime] = useState(new Date());\r\n  const [currentDay, setDay] = useState(\"\");\r\n  const [currentDate, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function refreshClock() {\r\n      setDateTime(new Date());\r\n      var dateArray = String(currentDateTime).split(\" \");\r\n      setDay(dateArray[0]);\r\n      setDate(dateArray[2] + \" \" + dateArray[1] + \" \" + dateArray[3]);\r\n    }\r\n    const timerId = setInterval(refreshClock, 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"dashboardDesc\">\r\n        <h1>{screenTitle}</h1>\r\n        <h2>{screenDesc}</h2>\r\n      </div>\r\n      <div className=\"timestamp\">\r\n        <h1>{currentDateTime.toLocaleTimeString()}</h1>\r\n        <h2>{currentDate}</h2>\r\n        <h2>{currentDay}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenHeader;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js",["60","61","62"],"import DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"./Analytics.css\";\r\nimport Stream from \"./Stream\";\r\nimport Line from \"./Line\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Analytics({\r\n  d1HandAccArray,\r\n  d2HandAccArray,\r\n  d3HandAccArray,\r\n  d1HandGyroArray,\r\n  d2HandGyroArray,\r\n  d3HandGyroArray,\r\n  emgArray,\r\n}) {\r\n  const dropdownItems = [\r\n    \"Fatigue\",\r\n    \"Gyroscope 1\",\r\n    \"Accelerometer 1\",\r\n    \"Gyroscope 2\",\r\n    \"Accelerometer 2\",\r\n    \"Gyroscope 3\",\r\n    \"Accelerometer 3\",\r\n  ];\r\n  const [title, setTitle] = useState(\"Fatigue\");\r\n\r\n  const handleChange = (item) => {\r\n    setTitle(item);\r\n  };\r\n\r\n  const renderGraph = (choice) => {\r\n    switch (choice) {\r\n      case \"Fatigue\":\r\n        console.log(\"emg2\", emgArray);\r\n        return <Stream data={emgArray} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"analyticsWrapper\">\r\n      <DropdownButton id=\"dropdown\" title={title}>\r\n        {dropdownItems.map((item) => (\r\n          <Dropdown.Item onClick={() => handleChange(item)}>\r\n            {item}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      {renderGraph(title)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analytics;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js",[],["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":82,"column":7,"nodeType":"71","messageId":"72","endLine":82,"endColumn":11},{"ruleId":"73","severity":1,"message":"74","line":149,"column":6,"nodeType":"75","endLine":149,"endColumn":8,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":20,"column":6,"nodeType":"75","endLine":20,"endColumn":8,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":12},{"ruleId":"69","severity":1,"message":"80","line":6,"column":10,"nodeType":"71","messageId":"72","endLine":6,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":33,"column":5,"nodeType":"83","messageId":"84","endLine":37,"endColumn":6},{"ruleId":"65","replacedBy":"85"},{"ruleId":"67","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'd1HandAccArray', 'd1HandGyroArray', 'd2HandAccArray', 'd2HandGyroArray', 'd3HandAccArray', 'd3HandGyroArray', and 'emgArray'. Either include them or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'currentDateTime'. Either include it or remove the dependency array.",["90"],"'Line' is defined but never used.","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["87"],["88"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [d1HandAccArray, d1HandGyroArray, d2HandAccArray, d2HandGyroArray, d3HandAccArray, d3HandGyroArray, emgArray]",{"range":"95","text":"96"},"Update the dependencies array to be: [currentDateTime]",{"range":"97","text":"98"},[4021,4023],"[d1HandAccArray, d1HandGyroArray, d2HandAccArray, d2HandGyroArray, d3HandAccArray, d3HandGyroArray, emgArray]",[674,676],"[currentDateTime]"]