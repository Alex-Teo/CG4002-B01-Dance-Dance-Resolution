[{"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js":"1","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js":"3","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js":"4","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\History.js":"5","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js":"6","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js":"7","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\Dashboard.js":"8","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js":"9","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js":"10","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js":"11","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js":"12"},{"size":519,"mtime":1632880674571,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1629614679416,"results":"15","hashOfConfig":"14"},{"size":622,"mtime":1632886941555,"results":"16","hashOfConfig":"14"},{"size":1122,"mtime":1633632045810,"results":"17","hashOfConfig":"14"},{"size":286,"mtime":1631838605892,"results":"18","hashOfConfig":"14"},{"size":1713,"mtime":1632886679659,"results":"19","hashOfConfig":"14"},{"size":3905,"mtime":1633631931913,"results":"20","hashOfConfig":"14"},{"size":6978,"mtime":1633663702373,"results":"21","hashOfConfig":"14"},{"size":1062,"mtime":1632886928137,"results":"22","hashOfConfig":"14"},{"size":1504,"mtime":1633664472260,"results":"23","hashOfConfig":"14"},{"size":1974,"mtime":1633664481417,"results":"24","hashOfConfig":"14"},{"size":1809,"mtime":1633662375186,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rbgyic",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js",[],["53","54"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\History.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\Dashboard.js",["55"],"import \"./Dashboard.css\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport CoachCard from \"../components/CoachCard\";\r\nimport Analytics from \"../components/Analytics\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Dashboard = () => {\r\n  // ---------------- useState ---------------- //\r\n  // useState for coach data\r\n  const [currentCoachData, setCurrentCoachData] = useState({\r\n    actualDance: \" \",\r\n    actualPositions: [],\r\n  });\r\n\r\n  //useState for emgArray\r\n  const [emgArray, setEmgArray] = useState([\r\n    {\r\n      Dancer1: 0,\r\n      Dancer2: 0,\r\n      Dancer3: 0,\r\n    },\r\n  ]);\r\n\r\n  //useState for emgArray\r\n  const [gyro1Array, setgyro1Array] = useState([\r\n    {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0,\r\n    },\r\n  ]);\r\n\r\n  const [gyro2Array, setgyro2Array] = useState([\r\n    {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0,\r\n    },\r\n  ]);\r\n\r\n  const [gyro3Array, setgyro3Array] = useState([\r\n    {\r\n      x: 0,\r\n      y: 0,\r\n      z: 0,\r\n    },\r\n  ]);\r\n\r\n  // useState for processed data\r\n  const [currentProcessedData, setCurrentProcessedData] = useState({\r\n    predictedDance: \" \",\r\n    dancer1PredictedPos: \" \",\r\n    dancer2PredictedPos: \" \",\r\n    dancer3PredictedPos: \" \",\r\n    syncDelay: \" \",\r\n  });\r\n\r\n  // ---------------- Sockets ---------------- //\r\n  useEffect(() => {\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n\r\n    // Client-server socket initialized\r\n    socket.on(\"connect\", () => {\r\n      console.log(`Client connected with socket.io ID: ${socket.id}`);\r\n    });\r\n\r\n    // Sockets for coach data\r\n    socket.on(\"newCoachData\", (coachData) => {\r\n      setCurrentCoachData({\r\n        actualDance: coachData[\"actualDance\"],\r\n        actualPositions: coachData[\"actualPositions\"].split(\" | \"),\r\n      });\r\n    });\r\n\r\n    // Sockets for raw data\r\n    socket.on(\"newRawData\", (RawData) => {\r\n      var currUserID = RawData[\"userID\"];\r\n      var currentEmgData = emgArray;\r\n      if (currentEmgData.length > 20) currentEmgData.pop();\r\n\r\n      var dancer1Emg,\r\n        dancer2Emg,\r\n        dancer3Emg,\r\n        gX1,\r\n        gY1,\r\n        gZ1,\r\n        gX2,\r\n        gY2,\r\n        gZ2,\r\n        gX3,\r\n        gY3,\r\n        gZ3 = 0;\r\n\r\n      switch (currUserID) {\r\n        case \"0\":\r\n          dancer1Emg = Number(RawData[\"emg\"]);\r\n          dancer2Emg = Number(currentEmgData.at(-1)[\"Dancer2\"]);\r\n          dancer3Emg = Number(currentEmgData.at(-1)[\"Dancer3\"]);\r\n          gX1 = Number(RawData[\"gX\"]);\r\n          gY1 = Number(RawData[\"gY\"]);\r\n          gZ1 = Number(RawData[\"gZ\"]);\r\n          break;\r\n        case \"1\":\r\n          dancer2Emg = Number(RawData[\"emg\"]);\r\n          dancer1Emg = Number(currentEmgData.at(-1)[\"Dancer1\"]);\r\n          dancer3Emg = Number(currentEmgData.at(-1)[\"Dancer3\"]);\r\n          gX2 = Number(RawData[\"gX\"]);\r\n          gY2 = Number(RawData[\"gY\"]);\r\n          gZ1 = Number(RawData[\"gZ\"]);\r\n          break;\r\n        case \"2\":\r\n          dancer3Emg = Number(RawData[\"emg\"]);\r\n          dancer1Emg = Number(currentEmgData.at(-1)[\"Dancer1\"]);\r\n          dancer2Emg = Number(currentEmgData.at(-1)[\"Dancer2\"]);\r\n          gX3 = Number(RawData[\"gX\"]);\r\n          gY3 = Number(RawData[\"gY\"]);\r\n          gZ3 = Number(RawData[\"gZ\"]);\r\n          break;\r\n        default:\r\n          dancer1Emg = Number(currentEmgData.at(-1)[\"Dancer1\"]);\r\n          dancer2Emg = Number(currentEmgData.at(-1)[\"Dancer2\"]);\r\n          dancer3Emg = Number(currentEmgData.at(-1)[\"Dancer3\"]);\r\n      }\r\n\r\n      setEmgArray((emgArray) => [\r\n        ...emgArray,\r\n        { Dancer1: dancer1Emg, Dancer2: dancer2Emg, Dancer3: dancer3Emg },\r\n      ]);\r\n      setgyro1Array((gyro1Array) => [\r\n        ...gyro1Array,\r\n        { x: gX1, y: gY1, z: gZ1 },\r\n      ]);\r\n\r\n      setgyro2Array((gyro2Array) => [\r\n        ...gyro2Array,\r\n        { x: gX2, y: gY2, z: gZ2 },\r\n      ]);\r\n\r\n      setgyro3Array((gyro3Array) => [\r\n        ...gyro3Array,\r\n        { x: gX3, y: gY3, z: gZ3 },\r\n      ]);\r\n    });\r\n\r\n    // Sockets for processed data\r\n    socket.on(\"newProcessedData\", (ProcessedData) => {\r\n      setCurrentProcessedData({\r\n        predictedDance: ProcessedData[\"predictedDance\"], // dance\r\n        dancer1PredictedPos: ProcessedData[\"predictedPos\"].split(\" | \")[0], // pos1 | pos2 | pos3\r\n        dancer2PredictedPos: ProcessedData[\"predictedPos\"].split(\" | \")[1], // pos1 | pos2 | pos3\r\n        dancer3PredictedPos: ProcessedData[\"predictedPos\"].split(\" | \")[2], // pos1 | pos2 | pos3\r\n        syncDelay: ProcessedData[\"syncDelay\"], // sync\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboardWrapper\">\r\n      <ScreenHeader\r\n        screenTitle=\"Dashboard\"\r\n        screenDesc=\"A closer look at your performance\"\r\n      />\r\n\r\n      <div className=\"analytics\">\r\n        <div className=\"users\">\r\n          <UserCard\r\n            dancerId=\"Dancer 1\"\r\n            delay={currentProcessedData.syncDelay}\r\n            currentDance={currentProcessedData.predictedDance}\r\n            currentPos={currentProcessedData.dancer1PredictedPos}\r\n            coachDance={currentCoachData.actualDance}\r\n            coachPos={currentCoachData.actualPositions}\r\n          />\r\n          <UserCard\r\n            dancerId=\"Dancer 2\"\r\n            delay={currentProcessedData.syncDelay}\r\n            currentDance={currentProcessedData.predictedDance}\r\n            currentPos={currentProcessedData.dancer2PredictedPos}\r\n            coachDance={currentCoachData.actualDance}\r\n            coachPos={currentCoachData.actualPositions}\r\n          />\r\n          <UserCard\r\n            dancerId=\"Dancer 3\"\r\n            delay={currentProcessedData.syncDelay}\r\n            currentDance={currentProcessedData.predictedDance}\r\n            currentPos={currentProcessedData.dancer3PredictedPos}\r\n            coachDance={currentCoachData.actualDance}\r\n            coachPos={currentCoachData.actualPositions}\r\n          />\r\n          <div className=\"graph\">\r\n            <Analytics\r\n              emgData={emgArray.slice(-21)}\r\n              gyro1Data={gyro1Array.slice(-21)}\r\n              gyro2Data={gyro2Array.slice(-21)}\r\n              gyro3Data={gyro3Array.slice(-21)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"coach\">\r\n          <CoachCard\r\n            currentDance={currentCoachData.actualDance}\r\n            actualPositions={currentCoachData.actualPositions}\r\n            feedback={[\r\n              currentCoachData.dancer1Feedback,\r\n              currentCoachData.dancer2Feedback,\r\n              currentCoachData.dancer3Feedback,\r\n            ]}\r\n            dancerDance={currentProcessedData.predictedDance}\r\n            dancerPos={[\r\n              currentProcessedData.dancer1PredictedPos,\r\n              currentProcessedData.dancer2PredictedPos,\r\n              currentProcessedData.dancer3PredictedPos,\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js",["56"],"import \"./ScreenHeader.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction ScreenHeader({ screenTitle, screenDesc }) {\r\n  const [currentDateTime, setDateTime] = useState(new Date());\r\n  const [currentDay, setDay] = useState(\"\");\r\n  const [currentDate, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function refreshClock() {\r\n      setDateTime(new Date());\r\n      var dateArray = String(currentDateTime).split(\" \");\r\n      setDay(dateArray[0]);\r\n      setDate(dateArray[2] + \" \" + dateArray[1] + \" \" + dateArray[3]);\r\n    }\r\n    const timerId = setInterval(refreshClock, 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"dashboardDesc\">\r\n        <h1>{screenTitle}</h1>\r\n        <h2>{screenDesc}</h2>\r\n      </div>\r\n      <div className=\"timestamp\">\r\n        <h1>{currentDateTime.toLocaleTimeString()}</h1>\r\n        <h2>{currentDate}</h2>\r\n        <h2>{currentDay}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenHeader;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js",["57","58","59","60"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":158,"column":6,"nodeType":"67","endLine":158,"endColumn":8,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":20,"column":6,"nodeType":"67","endLine":20,"endColumn":8,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":12},{"ruleId":"71","severity":1,"message":"75","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":19},{"ruleId":"71","severity":1,"message":"76","line":10,"column":25,"nodeType":"73","messageId":"74","endLine":10,"endColumn":41},{"ruleId":"77","severity":1,"message":"78","line":25,"column":5,"nodeType":"79","messageId":"80","endLine":36,"endColumn":6},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'emgArray'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'currentDateTime'. Either include it or remove the dependency array.",["84"],"no-unused-vars","'Line' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setDropdownItems' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [emgArray]",{"range":"89","text":"90"},"Update the dependencies array to be: [currentDateTime]",{"range":"91","text":"92"},[4601,4603],"[emgArray]",[674,676],"[currentDateTime]"]