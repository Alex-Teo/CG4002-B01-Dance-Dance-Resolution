[{"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js":"1","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js":"3","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js":"4","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js":"5","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js":"6","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js":"7","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js":"8","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js":"9","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js":"10","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\HistoryScreen.js":"11","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\DashboardScreen.js":"12","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\WelcomeScreen.js":"13","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\HistoryTable.js":"14","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\context\\socket.js":"15"},{"size":519,"mtime":1632880674571,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1629614679416,"results":"18","hashOfConfig":"17"},{"size":932,"mtime":1635527173095,"results":"19","hashOfConfig":"17"},{"size":1208,"mtime":1635526037414,"results":"20","hashOfConfig":"17"},{"size":1713,"mtime":1634616329477,"results":"21","hashOfConfig":"17"},{"size":4036,"mtime":1635265960108,"results":"22","hashOfConfig":"17"},{"size":1062,"mtime":1634564100355,"results":"23","hashOfConfig":"17"},{"size":1880,"mtime":1634564100351,"results":"24","hashOfConfig":"17"},{"size":1975,"mtime":1634564100356,"results":"25","hashOfConfig":"17"},{"size":1917,"mtime":1634564100353,"results":"26","hashOfConfig":"17"},{"size":432,"mtime":1634658025251,"results":"27","hashOfConfig":"17"},{"size":11265,"mtime":1635530980933,"results":"28","hashOfConfig":"17"},{"size":522,"mtime":1634620121220,"results":"29","hashOfConfig":"17"},{"size":1230,"mtime":1634658212064,"results":"30","hashOfConfig":"17"},{"size":193,"mtime":1635526869870,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1rbgyic",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js",[],["67","68"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js",["69"],"import \"./ScreenHeader.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction ScreenHeader({ screenTitle, screenDesc }) {\r\n  const [currentDateTime, setDateTime] = useState(new Date());\r\n  const [currentDay, setDay] = useState(\"\");\r\n  const [currentDate, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function refreshClock() {\r\n      setDateTime(new Date());\r\n      var dateArray = String(currentDateTime).split(\" \");\r\n      setDay(dateArray[0]);\r\n      setDate(dateArray[2] + \" \" + dateArray[1] + \" \" + dateArray[3]);\r\n    }\r\n    const timerId = setInterval(refreshClock, 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"dashboardDesc\">\r\n        <h1>{screenTitle}</h1>\r\n        <h2>{screenDesc}</h2>\r\n      </div>\r\n      <div className=\"timestamp\">\r\n        <h1>{currentDateTime.toLocaleTimeString()}</h1>\r\n        <h2>{currentDate}</h2>\r\n        <h2>{currentDay}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenHeader;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js",["70","71"],"import DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"./Analytics.css\";\r\nimport Stream from \"./Stream\";\r\nimport Line from \"./Line\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Analytics({\r\n  d1HandAcc,\r\n  d2HandAcc,\r\n  d3HandAcc,\r\n  d1HandGyro,\r\n  d2HandGyro,\r\n  d3HandGyro,\r\n  emgArray,\r\n}) {\r\n  const dropdownItems = [\r\n    \"EMG\",\r\n\r\n    \"Dancer 1 Accelerometer\",\r\n    \"Dancer 1 Gyroscope\",\r\n\r\n    \"Dancer 2 Accelerometer\",\r\n    \"Dancer 2 Gyroscope\",\r\n\r\n    \"Dancer 3 Accelerometer\",\r\n    \"Dancer 3 Gyroscope\",\r\n  ];\r\n\r\n  const [title, setTitle] = useState(\"EMG\");\r\n\r\n  const handleChange = (item) => {\r\n    setTitle(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTitle(title);\r\n  });\r\n\r\n  const renderGraph = (choice) => {\r\n    switch (choice) {\r\n      case \"EMG\":\r\n        return <Stream data={emgArray} />;\r\n      case \"Dancer 1 Accelerometer\":\r\n        return <Line data={d1HandAcc} axis={\"Accelerometer\"} />;\r\n      case \"Dancer 1 Gyroscope\":\r\n        return <Line data={d1HandGyro} axis={\"Gyroscope\"} />;\r\n      case \"Dancer 2 Accelerometer\":\r\n        return <Line data={d2HandAcc} axis={\"Accelerometer\"} />;\r\n      case \"Dancer 2 Gyroscope\":\r\n        return <Line data={d2HandGyro} axis={\"Gyroscope\"} />;\r\n      case \"Dancer 3 Accelerometer\":\r\n        return <Line data={d3HandAcc} axis={\"Accelerometer\"} />;\r\n      case \"Dancer 3 Gyroscope\":\r\n        return <Line data={d3HandGyro} axis={\"Gyroscope\"} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"analyticsWrapper\">\r\n      <DropdownButton id=\"dropdown\" title={title}>\r\n        {dropdownItems.map((item) => (\r\n          <Dropdown.Item onClick={() => handleChange(item)}>\r\n            {item}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      {renderGraph(title)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analytics;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js",[],["72","73"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\HistoryScreen.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\DashboardScreen.js",["74"],"import \"./Dashboard.css\";\r\n\r\nimport UserCard from \"../components/UserCard\";\r\nimport CoachCard from \"../components/CoachCard\";\r\nimport Analytics from \"../components/Analytics\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\n\r\nimport { SocketContext } from \"../context/socket\";\r\n\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst DashboardScreen = () => {\r\n  // ---------------- Socket ---------------- //\r\n  const socket = useContext(SocketContext);\r\n  socket.on(\"connect\", () => {\r\n    console.log(`Client connected with socket.io ID: ${socket.id}`);\r\n  });\r\n\r\n  // ---------------- onClick Fxn ---------------- //\r\n  const toggleDisplayLogout = () => {\r\n    setDisplayLogout(!displayLogout);\r\n  };\r\n\r\n  const manualLogout = () => {\r\n    toggleDisplayLogout();\r\n    console.log(\"Manual logout clicked!\");\r\n    socket.emit(\"CLIENT_LOGOUT\");\r\n  };\r\n\r\n  // ---------------- useState ---------------- //\r\n  const [displayLogout, setDisplayLogout] = useState(false);\r\n\r\n  // ---------------- useState (Data) ---------------- //\r\n  const [coachData, setCoachData] = useState({\r\n    actualDance: \"No Coach\",\r\n    actualPositions: [1, 2, 3],\r\n  });\r\n\r\n  const [emgArray, setEmgArray] = useState([\r\n    {\r\n      emgMean: 0,\r\n    },\r\n  ]);\r\n\r\n  const [processedData, setProcessedData] = useState({\r\n    predictedDance1: \"Inactive\",\r\n    predictedDance2: \"Inactive\",\r\n    predictedDance3: \"Inactive\",\r\n    predictedPos: [1, 2, 3],\r\n    syncDelay: 0,\r\n  });\r\n\r\n  const [predictedPos, setPredictedPos] = useState([1, 2, 3]);\r\n\r\n  const [d1HandAcc, setD1HandAcc] = useState([\r\n    {\r\n      id: \"D1 AccX\",\r\n      color: \"hsl(91, 70%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D1 AccY\",\r\n      color: \"hsl(10, 20%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D1 AccZ\",\r\n      color: \"hsl(60, 70%, 90%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n  const [d2HandAcc, setD2HandAcc] = useState([\r\n    {\r\n      id: \"D2 AccX\",\r\n      color: \"hsl(91, 70%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D2 AccY\",\r\n      color: \"hsl(10, 20%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D2 AccZ\",\r\n      color: \"hsl(60, 70%, 90%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n  const [d3HandAcc, setD3HandAcc] = useState([\r\n    {\r\n      id: \"D3 AccX\",\r\n      color: \"hsl(91, 70%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D3 AccY\",\r\n      color: \"hsl(10, 20%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D3 AccZ\",\r\n      color: \"hsl(60, 70%, 90%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const [d1HandGyro, setD1HandGyro] = useState([\r\n    {\r\n      id: \"D1 GyroX\",\r\n      color: \"hsl(91, 70%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D1 GyroY\",\r\n      color: \"hsl(10, 20%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D1 GyroZ\",\r\n      color: \"hsl(60, 70%, 90%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n  const [d2HandGyro, setD2HandGyro] = useState([\r\n    {\r\n      id: \"D2 GyroX\",\r\n      color: \"hsl(91, 70%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D2 GyroY\",\r\n      color: \"hsl(10, 20%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D2 GyroZ\",\r\n      color: \"hsl(60, 70%, 90%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n  const [d3HandGyro, setD3HandGyro] = useState([\r\n    {\r\n      id: \"D3 GyroX\",\r\n      color: \"hsl(91, 70%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D3 GyroY\",\r\n      color: \"hsl(10, 20%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"D3 GyroZ\",\r\n      color: \"hsl(60, 70%, 90%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  // ---------------- Sockets ---------------- //\r\n  useEffect(() => {\r\n    var d1Time = 1;\r\n    var d2Time = 1;\r\n    var d3Time = 1;\r\n\r\n    socket.on(\"SERVER_D1_DATA\", (FinalData) => {\r\n      let tempD1HandAcc = d1HandAcc;\r\n      let tempD1HandGyro = d1HandGyro;\r\n\r\n      if (tempD1HandAcc[0].data.length > 10) {\r\n        tempD1HandAcc[0].data.shift();\r\n        tempD1HandAcc[1].data.shift();\r\n        tempD1HandAcc[2].data.shift();\r\n      }\r\n      if (tempD1HandGyro[0].data.length > 10) {\r\n        tempD1HandGyro[0].data.shift();\r\n        tempD1HandGyro[1].data.shift();\r\n        tempD1HandGyro[2].data.shift();\r\n      }\r\n      tempD1HandAcc[0].data.push({ x: d1Time, y: FinalData.aX });\r\n      tempD1HandAcc[1].data.push({ x: d1Time, y: FinalData.aY });\r\n      tempD1HandAcc[2].data.push({ x: d1Time, y: FinalData.aZ });\r\n\r\n      tempD1HandGyro[0].data.push({ x: d1Time, y: FinalData.gX });\r\n      tempD1HandGyro[1].data.push({ x: d1Time, y: FinalData.gY });\r\n      tempD1HandGyro[2].data.push({ x: d1Time, y: FinalData.gZ });\r\n\r\n      d1Time += 1;\r\n      setD1HandAcc(tempD1HandAcc);\r\n      setD1HandGyro(tempD1HandGyro);\r\n    });\r\n\r\n    socket.on(\"SERVER_D2_DATA\", (FinalData) => {\r\n      let tempD2HandAcc = d2HandAcc;\r\n      let tempD2HandGyro = d2HandGyro;\r\n\r\n      if (tempD2HandAcc[0].data.length > 10) {\r\n        tempD2HandAcc[0].data.shift();\r\n        tempD2HandAcc[1].data.shift();\r\n        tempD2HandAcc[2].data.shift();\r\n      }\r\n      if (tempD2HandGyro[0].data.length > 10) {\r\n        tempD2HandGyro[0].data.shift();\r\n        tempD2HandGyro[1].data.shift();\r\n        tempD2HandGyro[2].data.shift();\r\n      }\r\n      tempD2HandAcc[0].data.push({ x: d2Time, y: FinalData.aX });\r\n      tempD2HandAcc[1].data.push({ x: d2Time, y: FinalData.aY });\r\n      tempD2HandAcc[2].data.push({ x: d2Time, y: FinalData.aZ });\r\n\r\n      tempD2HandGyro[0].data.push({ x: d2Time, y: FinalData.gX });\r\n      tempD2HandGyro[1].data.push({ x: d2Time, y: FinalData.gY });\r\n      tempD2HandGyro[2].data.push({ x: d2Time, y: FinalData.gZ });\r\n\r\n      d2Time += 1;\r\n      setD2HandAcc(tempD2HandAcc);\r\n      setD2HandGyro(tempD2HandGyro);\r\n    });\r\n\r\n    socket.on(\"SERVER_D3_DATA\", (FinalData) => {\r\n      let tempD3HandAcc = d3HandAcc;\r\n      let tempD3HandGyro = d3HandGyro;\r\n\r\n      if (tempD3HandAcc[0].data.length > 10) {\r\n        tempD3HandAcc[0].data.shift();\r\n        tempD3HandAcc[1].data.shift();\r\n        tempD3HandAcc[2].data.shift();\r\n      }\r\n      if (tempD3HandGyro[0].data.length > 10) {\r\n        tempD3HandGyro[0].data.shift();\r\n        tempD3HandGyro[1].data.shift();\r\n        tempD3HandGyro[2].data.shift();\r\n      }\r\n      tempD3HandAcc[0].data.push({ x: d3Time, y: FinalData.aX });\r\n      tempD3HandAcc[1].data.push({ x: d3Time, y: FinalData.aY });\r\n      tempD3HandAcc[2].data.push({ x: d3Time, y: FinalData.aZ });\r\n\r\n      tempD3HandGyro[0].data.push({ x: d3Time, y: FinalData.gX });\r\n      tempD3HandGyro[1].data.push({ x: d3Time, y: FinalData.gY });\r\n      tempD3HandGyro[2].data.push({ x: d3Time, y: FinalData.gZ });\r\n\r\n      d3Time += 1;\r\n      setD3HandAcc(tempD3HandAcc);\r\n      setD3HandGyro(tempD3HandGyro);\r\n    });\r\n\r\n    socket.on(\"SERVER_EMG_DATA\", (FinalData) => {\r\n      let newArray = emgArray;\r\n      newArray.push(FinalData);\r\n      setEmgArray(newArray);\r\n    });\r\n\r\n    socket.on(\"SERVER_PROCESSED_DATA\", (ProcessedData) => {\r\n      setProcessedData(ProcessedData);\r\n      setPredictedPos(ProcessedData.predictedPos);\r\n    });\r\n\r\n    socket.on(\"SERVER_COACH_DATA\", (coachData) => {\r\n      setCoachData(coachData);\r\n    });\r\n\r\n    socket.on(\"SERVER_LOGOUT\", () => {\r\n      toggleDisplayLogout();\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"dashboard_wrapper\">\r\n      <ScreenHeader\r\n        screenTitle=\"Dashboard\"\r\n        screenDesc=\"A closer look at your performance\"\r\n      />\r\n      <div className={displayLogout ? \"logout_bg\" : \"logout_bg_hidden\"}></div>\r\n      <div className={displayLogout ? \"logout_prompt\" : \"logout_prompt_hidden\"}>\r\n        <div className=\"logout_msg\">\r\n          We have detected a logout dance move!\r\n          <div className=\"sub_msg\">Would you like to end the session?</div>\r\n        </div>\r\n        <div className=\"logout_options\">\r\n          <Button\r\n            className=\"option_btn\"\r\n            variant=\"outline-secondary\"\r\n            onClick={() => toggleDisplayLogout()}\r\n          >\r\n            Continue Dancing\r\n          </Button>{\" \"}\r\n          <Button className=\"option_btn\" variant=\"danger\">\r\n            End Session\r\n          </Button>{\" \"}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sub_dashboard_wrapper\">\r\n        <div className=\"info_wrapper\">\r\n          <div className=\"users_wrapper\">\r\n            <UserCard\r\n              dancerId=\"Jess\"\r\n              syncDelay={processedData.syncDelay}\r\n              currentDance={processedData.predictedDance1}\r\n              currentPos={predictedPos.indexOf(1)}\r\n              coachDance={coachData.actualDance}\r\n              coachPos={coachData.actualPositions}\r\n            />\r\n            <UserCard\r\n              dancerId=\"Amir\"\r\n              syncDelay={processedData.syncDelay}\r\n              currentDance={processedData.predictedDance2}\r\n              currentPos={predictedPos.indexOf(2)}\r\n              coachDance={coachData.actualDance}\r\n              coachPos={coachData.actualPositions}\r\n            />\r\n            <UserCard\r\n              dancerId=\"Billy\"\r\n              syncDelay={processedData.syncDelay}\r\n              currentDance={processedData.predictedDance3}\r\n              currentPos={predictedPos.indexOf(3)}\r\n              coachDance={coachData.actualDance}\r\n              coachPos={coachData.actualPositions}\r\n            />\r\n          </div>\r\n          <div className=\"graph_wrapper\">\r\n            <Analytics\r\n              d1HandAcc={d1HandAcc}\r\n              d2HandAcc={d2HandAcc}\r\n              d3HandAcc={d3HandAcc}\r\n              d1HandGyro={d1HandGyro}\r\n              d2HandGyro={d2HandGyro}\r\n              d3HandGyro={d3HandGyro}\r\n              emgArray={emgArray.slice(-20)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"coach_wrapper\">\r\n          <CoachCard\r\n            currentDance={coachData.actualDance}\r\n            actualPositions={coachData.actualPositions}\r\n            dancerDance={processedData.predictedDance}\r\n            dancerPos={processedData.predictedPos}\r\n          />\r\n          <Button onClick={() => manualLogout()}>TEST</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\WelcomeScreen.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\HistoryTable.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\context\\socket.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":20,"column":6,"nodeType":"81","endLine":20,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":37,"column":3,"nodeType":"84","endLine":37,"endColumn":12,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":42,"column":5,"nodeType":"88","messageId":"89","endLine":57,"endColumn":6},{"ruleId":"75","replacedBy":"90"},{"ruleId":"77","replacedBy":"91"},{"ruleId":"79","severity":1,"message":"92","line":355,"column":6,"nodeType":"81","endLine":355,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentDateTime'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect contains a call to 'setTitle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [title] as a second argument to the useEffect Hook.","Identifier",["97"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["94"],["95"],"React Hook useEffect has missing dependencies: 'd1HandAcc', 'd1HandGyro', 'd2HandAcc', 'd2HandGyro', 'd3HandAcc', 'd3HandGyro', 'emgArray', 'socket', and 'toggleDisplayLogout'. Either include them or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [currentDateTime]",{"range":"105","text":"106"},"Add dependencies array: [title]",{"range":"107","text":"108"},"Update the dependencies array to be: [d1HandAcc, d1HandGyro, d2HandAcc, d2HandGyro, d3HandAcc, d3HandGyro, emgArray, socket, toggleDisplayLogout]",{"range":"109","text":"110"},[674,676],"[currentDateTime]",[763,763],", [title]",[8353,8355],"[d1HandAcc, d1HandGyro, d2HandAcc, d2HandGyro, d3HandAcc, d3HandGyro, emgArray, socket, toggleDisplayLogout]"]