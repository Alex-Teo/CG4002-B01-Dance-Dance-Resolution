[{"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js":"1","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js":"3","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js":"4","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\History.js":"5","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js":"6","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js":"7","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\Dashboard.js":"8","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js":"9","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js":"10","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js":"11","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js":"12"},{"size":519,"mtime":1632880674571,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1629614679416,"results":"15","hashOfConfig":"14"},{"size":622,"mtime":1632886941555,"results":"16","hashOfConfig":"14"},{"size":1131,"mtime":1633876834481,"results":"17","hashOfConfig":"14"},{"size":286,"mtime":1631838605892,"results":"18","hashOfConfig":"14"},{"size":1713,"mtime":1632886679659,"results":"19","hashOfConfig":"14"},{"size":3884,"mtime":1633855511870,"results":"20","hashOfConfig":"14"},{"size":9376,"mtime":1633973615283,"results":"21","hashOfConfig":"14"},{"size":1062,"mtime":1632886928137,"results":"22","hashOfConfig":"14"},{"size":1950,"mtime":1633973775059,"results":"23","hashOfConfig":"14"},{"size":1991,"mtime":1633857343272,"results":"24","hashOfConfig":"14"},{"size":1921,"mtime":1633943086886,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rbgyic",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js",[],["54","55"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\History.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\Dashboard.js",["56","57","58","59","60","61","62"],"import \"./Dashboard.css\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport CoachCard from \"../components/CoachCard\";\r\nimport Analytics from \"../components/Analytics\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Dashboard = () => {\r\n  // ---------------- Constants ---------------- //\r\n  const initialAccDataset = [\r\n    {\r\n      id: \"AccX\",\r\n      color: \"hsl(91, 70%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"AccY\",\r\n      color: \"hsl(10, 20%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"AccZ\",\r\n      color: \"hsl(60, 70%, 90%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const initialGyroDataset = [\r\n    {\r\n      id: \"GyroX\",\r\n      color: \"hsl(91, 70%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"GyroY\",\r\n      color: \"hsl(10, 20%, 50%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: \"GyroZ\",\r\n      color: \"hsl(60, 70%, 90%)\",\r\n      data: [\r\n        {\r\n          x: 0,\r\n          y: 0,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // ---------------- useState ---------------- //\r\n\r\n  // useState for coach data\r\n  const [coachData, setCoachData] = useState({\r\n    actualDance: \"No Coach\",\r\n    actualPositions: [1, 2, 3],\r\n  });\r\n\r\n  // Use state for raw data\r\n  // Array of objects\r\n  const [emgArray, setEmgArray] = useState([\r\n    {\r\n      d1Emg: 0,\r\n      d2Emg: 0,\r\n      d3Emg: 0,\r\n    },\r\n  ]);\r\n\r\n  // Array of objects - acc\r\n  const [d1HandAcc, setD1HandAcc] = useState(initialAccDataset);\r\n  const [d2HandAcc, setD2HandAcc] = useState(initialAccDataset);\r\n  const [d3HandAcc, setD3HandAcc] = useState(initialAccDataset);\r\n\r\n  // Array of objects - gyro\r\n  const [d1HandGyro, setD1HandGyro] = useState(initialGyroDataset);\r\n  const [d2HandGyro, setD2HandGyro] = useState(initialGyroDataset);\r\n  const [d3HandGyro, setD3HandGyro] = useState(initialGyroDataset);\r\n\r\n  //useState for processed data\r\n  const [processedData, setProcessedData] = useState({\r\n    predictedDance: \"Inactive\",\r\n    predictedPos: [1, 2, 3],\r\n    syncDelay: 0,\r\n  });\r\n\r\n  // var data = 0;\r\n\r\n  // ---------------- Sockets ---------------- //\r\n  useEffect(() => {\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n\r\n    // Client-server socket initialized\r\n    socket.on(\"connect\", () => {\r\n      console.log(`Client connected with socket.io ID: ${socket.id}`);\r\n    });\r\n\r\n    // Sockets for coach data\r\n    // {actualDance:string, actualPositions:array}\r\n    socket.on(\"newCoachData\", (coachData) => {\r\n      setCoachData(coachData);\r\n      // console.log(\"coach\", currentCoachData);\r\n    });\r\n    var d1Time = 1;\r\n    var d2Time = 1;\r\n    var d3Time = 1;\r\n    // Sockets for raw data\r\n    // {aX:num, aY:num, aZ:num, gX:num, gY:num, gZ:num}\r\n    socket.on(\"newD1HandData\", (FinalData) => {\r\n      let tempD1HandAcc = d1HandAcc;\r\n      let tempD1HandGyro = d1HandGyro;\r\n\r\n      if (tempD1HandAcc[0].data.length > 10) {\r\n        tempD1HandAcc[0].data.shift();\r\n        tempD1HandAcc[1].data.shift();\r\n        tempD1HandAcc[2].data.shift();\r\n      }\r\n      if (tempD1HandGyro[0].data.length > 10) {\r\n        tempD1HandGyro[0].data.shift();\r\n        tempD1HandGyro[1].data.shift();\r\n        tempD1HandGyro[2].data.shift();\r\n      }\r\n      tempD1HandAcc[0].data.push({ x: d1Time, y: FinalData.acc.aX });\r\n      tempD1HandAcc[1].data.push({ x: d1Time, y: FinalData.acc.aY });\r\n      tempD1HandAcc[2].data.push({ x: d1Time, y: FinalData.acc.aZ });\r\n\r\n      tempD1HandGyro[0].data.push({ x: d1Time, y: FinalData.gyro.gX });\r\n      tempD1HandGyro[1].data.push({ x: d1Time, y: FinalData.gyro.gY });\r\n      tempD1HandGyro[2].data.push({ x: d1Time, y: FinalData.gyro.gZ });\r\n\r\n      d1Time += 1;\r\n      setD1HandAcc(tempD1HandAcc);\r\n      setD1HandGyro(tempD1HandGyro);\r\n      // console.log(`Data Group ${data}`);\r\n      // data += 1;\r\n      // console.log(\"d1\", d1HandAcc, d1HandGyro);\r\n    });\r\n\r\n    // socket.on(\"newD2HandData\", (FinalData) => {\r\n    //   let tempD2HandAcc = d2HandAcc;\r\n    //   let tempD2HandGyro = d2HandGyro;\r\n\r\n    //   if (tempD2HandAcc[0].data.length > 10) {\r\n    //     tempD2HandAcc[0].data.shift();\r\n    //     tempD2HandAcc[1].data.shift();\r\n    //     tempD2HandAcc[2].data.shift();\r\n    //   }\r\n    //   if (tempD2HandGyro[0].data.length > 10) {\r\n    //     tempD2HandGyro[0].data.shift();\r\n    //     tempD2HandGyro[1].data.shift();\r\n    //     tempD2HandGyro[2].data.shift();\r\n    //   }\r\n    //   tempD2HandAcc[0].data.push({ x: d1Time, y: FinalData.acc.aX });\r\n    //   tempD2HandAcc[1].data.push({ x: d1Time, y: FinalData.acc.aY });\r\n    //   tempD2HandAcc[2].data.push({ x: d1Time, y: FinalData.acc.aZ });\r\n\r\n    //   tempD2HandGyro[0].data.push({ x: d1Time, y: FinalData.gyro.gX });\r\n    //   tempD2HandGyro[1].data.push({ x: d1Time, y: FinalData.gyro.gY });\r\n    //   tempD2HandGyro[2].data.push({ x: d1Time, y: FinalData.gyro.gZ });\r\n\r\n    //   d2Time += 1;\r\n    //   setD2HandAcc(tempD2HandAcc);\r\n    //   setD2HandGyro(tempD2HandGyro);\r\n    //   // console.log(\"d2\", d2HandAcc, d2HandGyro);\r\n    // });\r\n\r\n    // socket.on(\"newD3HandData\", (FinalData) => {\r\n    //   let tempD3HandAcc = d3HandAcc;\r\n    //   let tempD3HandGyro = d3HandGyro;\r\n\r\n    //   if (tempD3HandAcc[0].data.length > 10) {\r\n    //     tempD3HandAcc[0].data.shift();\r\n    //     tempD3HandAcc[1].data.shift();\r\n    //     tempD3HandAcc[2].data.shift();\r\n    //   }\r\n    //   if (tempD3HandGyro[0].data.length > 10) {\r\n    //     tempD3HandGyro[0].data.shift();\r\n    //     tempD3HandGyro[1].data.shift();\r\n    //     tempD3HandGyro[2].data.shift();\r\n    //   }\r\n    //   tempD3HandAcc[0].data.push({ x: d1Time, y: FinalData.acc.aX });\r\n    //   tempD3HandAcc[1].data.push({ x: d1Time, y: FinalData.acc.aY });\r\n    //   tempD3HandAcc[2].data.push({ x: d1Time, y: FinalData.acc.aZ });\r\n\r\n    //   tempD3HandGyro[0].data.push({ x: d1Time, y: FinalData.gyro.gX });\r\n    //   tempD3HandGyro[1].data.push({ x: d1Time, y: FinalData.gyro.gY });\r\n    //   tempD3HandGyro[2].data.push({ x: d1Time, y: FinalData.gyro.gZ });\r\n\r\n    //   d3Time += 1;\r\n    //   setD3HandAcc(tempD3HandAcc);\r\n    //   setD3HandGyro(tempD3HandGyro);\r\n    //   // console.log(\"d3\", d3HandAcc, d3HandGyro);\r\n    // });\r\n\r\n    // Socket for Emg data\r\n    // {d1Emg:num, d2Emg:num, d3Emg:num}\r\n    socket.on(\"newEmgData\", (FinalData) => {\r\n      let newArray = emgArray;\r\n      newArray.push(FinalData);\r\n      setEmgArray(newArray);\r\n      // console.log(\"emg1\", emgArray);\r\n    });\r\n\r\n    // Sockets for processed data\r\n    // {predictedDance:string, predictedPos:array, syncDelay:number}\r\n    socket.on(\"newProcessedData\", (ProcessedData) => {\r\n      setProcessedData(ProcessedData);\r\n      // console.log(\"processed\", processedData);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboardWrapper\">\r\n      <ScreenHeader\r\n        screenTitle=\"Dashboard\"\r\n        screenDesc=\"A closer look at your performance\"\r\n      />\r\n\r\n      <div className=\"analytics\">\r\n        <div className=\"users\">\r\n          <UserCard\r\n            dancerId=\"Dancer 1\"\r\n            syncDelay={processedData.syncDelay}\r\n            currentDance={processedData.predictedDance}\r\n            currentPos={processedData.predictedPos.indexOf(1)}\r\n            coachDance={coachData.actualDance}\r\n            coachPos={coachData.actualPositions}\r\n          />\r\n          <UserCard //TODO: Replace with real values after week 9\r\n            dancerId=\"Dancer 2\"\r\n            // syncDelay={processedData.syncDelay}\r\n            // currentDance={processedData.predictedDance}\r\n            syncDelay={\"-\"}\r\n            currentDance={\"Inactive\"}\r\n            currentPos={processedData.predictedPos.indexOf(2)}\r\n            coachDance={coachData.actualDance}\r\n            coachPos={coachData.actualPositions}\r\n          />\r\n          <UserCard //TODO: Replace with real values after week 9\r\n            dancerId=\"Dancer 3\"\r\n            // syncDelay={processedData.syncDelay}\r\n            // currentDance={processedData.predictedDance}\r\n            syncDelay={\"-\"}\r\n            currentDance={\"Inactive\"}\r\n            currentPos={processedData.predictedPos.indexOf(3)}\r\n            coachDance={coachData.actualDance}\r\n            coachPos={coachData.actualPositions}\r\n          />\r\n          <div className=\"graph\">\r\n            {/* {JSON.stringify(processedData)} */}\r\n            <Analytics\r\n              d1HandAcc={d1HandAcc}\r\n              d2HandAcc={d2HandAcc}\r\n              d3HandAcc={d3HandAcc}\r\n              d1HandGyro={d1HandGyro}\r\n              d2HandGyro={d2HandGyro}\r\n              d3HandGyro={d3HandGyro}\r\n              emgArray={emgArray.slice(-20)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"coach\">\r\n          <CoachCard\r\n            currentDance={coachData.actualDance}\r\n            actualPositions={coachData.actualPositions}\r\n            dancerDance={processedData.predictedDance}\r\n            dancerPos={processedData.predictedPos}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js",["63"],"import \"./ScreenHeader.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction ScreenHeader({ screenTitle, screenDesc }) {\r\n  const [currentDateTime, setDateTime] = useState(new Date());\r\n  const [currentDay, setDay] = useState(\"\");\r\n  const [currentDate, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function refreshClock() {\r\n      setDateTime(new Date());\r\n      var dateArray = String(currentDateTime).split(\" \");\r\n      setDay(dateArray[0]);\r\n      setDate(dateArray[2] + \" \" + dateArray[1] + \" \" + dateArray[3]);\r\n    }\r\n    const timerId = setInterval(refreshClock, 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"dashboardDesc\">\r\n        <h1>{screenTitle}</h1>\r\n        <h2>{screenDesc}</h2>\r\n      </div>\r\n      <div className=\"timestamp\">\r\n        <h1>{currentDateTime.toLocaleTimeString()}</h1>\r\n        <h2>{currentDate}</h2>\r\n        <h2>{currentDay}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenHeader;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js",["64","65","66","67","68","69","70","71","72"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js",[],["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":98,"column":21,"nodeType":"81","messageId":"82","endLine":98,"endColumn":33},{"ruleId":"79","severity":1,"message":"83","line":99,"column":21,"nodeType":"81","messageId":"82","endLine":99,"endColumn":33},{"ruleId":"79","severity":1,"message":"84","line":103,"column":22,"nodeType":"81","messageId":"82","endLine":103,"endColumn":35},{"ruleId":"79","severity":1,"message":"85","line":104,"column":22,"nodeType":"81","messageId":"82","endLine":104,"endColumn":35},{"ruleId":"79","severity":1,"message":"86","line":131,"column":9,"nodeType":"81","messageId":"82","endLine":131,"endColumn":15},{"ruleId":"79","severity":1,"message":"87","line":132,"column":9,"nodeType":"81","messageId":"82","endLine":132,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":236,"column":6,"nodeType":"90","endLine":236,"endColumn":8,"suggestions":"91"},{"ruleId":"88","severity":1,"message":"92","line":20,"column":6,"nodeType":"90","endLine":20,"endColumn":8,"suggestions":"93"},{"ruleId":"79","severity":1,"message":"94","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"95","line":7,"column":10,"nodeType":"81","messageId":"82","endLine":7,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":37,"column":5,"nodeType":"98","messageId":"99","endLine":58,"endColumn":6},{"ruleId":"100","severity":1,"message":"101","line":42,"column":9,"nodeType":"102","messageId":"103","endLine":42,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":45,"column":9,"nodeType":"102","messageId":"103","endLine":45,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":48,"column":9,"nodeType":"102","messageId":"103","endLine":48,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":51,"column":9,"nodeType":"102","messageId":"103","endLine":51,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":54,"column":9,"nodeType":"102","messageId":"103","endLine":54,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":57,"column":9,"nodeType":"102","messageId":"103","endLine":57,"endColumn":15},{"ruleId":"75","replacedBy":"104"},{"ruleId":"77","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'setD2HandAcc' is assigned a value but never used.","Identifier","unusedVar","'setD3HandAcc' is assigned a value but never used.","'setD2HandGyro' is assigned a value but never used.","'setD3HandGyro' is assigned a value but never used.","'d2Time' is assigned a value but never used.","'d3Time' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'd1HandAcc', 'd1HandGyro', and 'emgArray'. Either include them or remove the dependency array.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'currentDateTime'. Either include it or remove the dependency array.",["109"],"'Stream' is defined but never used.","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["106"],["107"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [d1HandAcc, d1HandGyro, emgArray]",{"range":"114","text":"115"},"Update the dependencies array to be: [currentDateTime]",{"range":"116","text":"117"},[7075,7077],"[d1HandAcc, d1HandGyro, emgArray]",[674,676],"[currentDateTime]"]