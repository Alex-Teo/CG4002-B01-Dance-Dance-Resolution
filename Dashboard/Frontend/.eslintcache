[{"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js":"1","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js":"3","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js":"4","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\History.js":"5","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js":"6","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js":"7","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\Dashboard.js":"8","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js":"9","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js":"10","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js":"11","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\LineGraph.js":"12"},{"size":519,"mtime":1632880674571,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1629614679416,"results":"15","hashOfConfig":"14"},{"size":622,"mtime":1632886941555,"results":"16","hashOfConfig":"14"},{"size":1130,"mtime":1633855578994,"results":"17","hashOfConfig":"14"},{"size":286,"mtime":1631838605892,"results":"18","hashOfConfig":"14"},{"size":1713,"mtime":1632886679659,"results":"19","hashOfConfig":"14"},{"size":3884,"mtime":1633855511870,"results":"20","hashOfConfig":"14"},{"size":5302,"mtime":1633861812233,"results":"21","hashOfConfig":"14"},{"size":1062,"mtime":1632886928137,"results":"22","hashOfConfig":"14"},{"size":1280,"mtime":1633861835988,"results":"23","hashOfConfig":"14"},{"size":1991,"mtime":1633857343272,"results":"24","hashOfConfig":"14"},{"size":1248,"mtime":1633864888568,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rbgyic",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js",[],["54","55"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\History.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\Dashboard.js",["56","57","58"],"import \"./Dashboard.css\";\r\nimport UserCard from \"../components/UserCard\";\r\nimport CoachCard from \"../components/CoachCard\";\r\nimport Analytics from \"../components/Analytics\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Dashboard = () => {\r\n  // ---------------- useState ---------------- //\r\n\r\n  // useState for coach data\r\n  const [coachData, setCoachData] = useState({\r\n    actualDance: \"No Coach\",\r\n    actualPositions: [1, 2, 3],\r\n  });\r\n\r\n  // Use state for raw data\r\n  // Array of objects\r\n  const [emgArray, setEmgArray] = useState([\r\n    {\r\n      d1Emg: 0,\r\n      d2Emg: 0,\r\n      d3Emg: 0,\r\n    },\r\n  ]);\r\n\r\n  // Array of objects - acc\r\n  const [d1HandAcc, setD1HandAcc] = useState({\r\n    aX: 0,\r\n    aY: 0,\r\n    aZ: 0,\r\n  });\r\n  const [d2HandAcc, setD2HandAcc] = useState({\r\n    aX: 0,\r\n    aY: 0,\r\n    aZ: 0,\r\n  });\r\n  const [d3HandAcc, setD3HandAcc] = useState({\r\n    aX: 0,\r\n    aY: 0,\r\n    aZ: 0,\r\n  });\r\n\r\n  // Array of objects - gyro\r\n  const [d1HandGyro, setD1HandGyro] = useState({\r\n    gX: 0,\r\n    gY: 0,\r\n    gZ: 0,\r\n  });\r\n  const [d2HandGyro, setD2HandGyro] = useState({\r\n    gX: 0,\r\n    gY: 0,\r\n    gZ: 0,\r\n  });\r\n  const [d3HandGyro, setD3HandGyro] = useState({\r\n    gX: 0,\r\n    gY: 0,\r\n    gZ: 0,\r\n  });\r\n\r\n  //useState for processed data\r\n  const [processedData, setProcessedData] = useState({\r\n    predictedDance: \"Not Dancing\",\r\n    predictedPos: [1, 2, 3],\r\n    syncDelay: 0,\r\n  });\r\n\r\n  var data = 0;\r\n\r\n  // ---------------- Sockets ---------------- //\r\n  useEffect(() => {\r\n    const socket = io.connect(\"http://localhost:5000\");\r\n\r\n    // Client-server socket initialized\r\n    socket.on(\"connect\", () => {\r\n      console.log(`Client connected with socket.io ID: ${socket.id}`);\r\n    });\r\n\r\n    // Sockets for coach data\r\n    // {actualDance:string, actualPositions:array}\r\n    socket.on(\"newCoachData\", (coachData) => {\r\n      setCoachData(coachData);\r\n      // console.log(\"coach\", currentCoachData);\r\n    });\r\n\r\n    // Sockets for raw data\r\n    // {aX:num, aY:num, aZ:num, gX:num, gY:num, gZ:num}\r\n    socket.on(\"newD1HandData\", (FinalData) => {\r\n      setD1HandAcc(FinalData.acc);\r\n      setD1HandGyro(FinalData.gyro);\r\n      // console.log(`Data Group ${data}`);\r\n      // data += 1;\r\n      // console.log(\"d1\", d1HandAcc, d1HandGyro);\r\n    });\r\n\r\n    socket.on(\"newD2HandData\", (FinalData) => {\r\n      setD2HandAcc(FinalData.acc);\r\n      setD2HandGyro(FinalData.gyro);\r\n      // console.log(\"d2\", d2HandAcc, d2HandGyro);\r\n    });\r\n\r\n    socket.on(\"newD3HandData\", (FinalData) => {\r\n      setD3HandAcc(FinalData.acc);\r\n      setD2HandGyro(FinalData.gyro);\r\n      // console.log(\"d3\", d3HandAcc, d3HandGyro);\r\n    });\r\n\r\n    // Socket for Emg data\r\n    // {d1Emg:num, d2Emg:num, d3Emg:num}\r\n    socket.on(\"newEmgData\", (FinalData) => {\r\n      let newArray = emgArray;\r\n      newArray.push(FinalData);\r\n      setEmgArray(newArray);\r\n      // console.log(\"emg1\", emgArray);\r\n    });\r\n\r\n    // Sockets for processed data\r\n    // {predictedDance:string, predictedPos:array, syncDelay:number}\r\n    socket.on(\"newProcessedData\", (ProcessedData) => {\r\n      setProcessedData(ProcessedData);\r\n      // console.log(\"processed\", processedData);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboardWrapper\">\r\n      <ScreenHeader\r\n        screenTitle=\"Dashboard\"\r\n        screenDesc=\"A closer look at your performance\"\r\n      />\r\n\r\n      <div className=\"analytics\">\r\n        <div className=\"users\">\r\n          <UserCard\r\n            dancerId=\"Dancer 1\"\r\n            syncDelay={processedData.syncDelay}\r\n            currentDance={processedData.predictedDance}\r\n            currentPos={processedData.predictedPos.indexOf(1)}\r\n            coachDance={coachData.actualDance}\r\n            coachPos={coachData.actualPositions}\r\n          />\r\n          <UserCard\r\n            dancerId=\"Dancer 2\"\r\n            syncDelay={processedData.syncDelay}\r\n            currentDance={processedData.predictedDance}\r\n            currentPos={processedData.predictedPos.indexOf(2)}\r\n            coachDance={coachData.actualDance}\r\n            coachPos={coachData.actualPositions}\r\n          />\r\n          <UserCard\r\n            dancerId=\"Dancer 3\"\r\n            syncDelay={processedData.syncDelay}\r\n            currentDance={processedData.predictedDance}\r\n            currentPos={processedData.predictedPos.indexOf(3)}\r\n            coachDance={coachData.actualDance}\r\n            coachPos={coachData.actualPositions}\r\n          />\r\n          <div className=\"graph\">\r\n            <Analytics\r\n              d1HandAcc={d1HandAcc}\r\n              d2HandAcc={d2HandAcc}\r\n              d3HandAcc={d3HandAcc}\r\n              d1HandGyro={d1HandGyro}\r\n              d2HandGyro={d2HandGyro}\r\n              d3HandGyro={d3HandGyro}\r\n              emgArray={emgArray.slice(-20)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"coach\">\r\n          <CoachCard\r\n            currentDance={coachData.actualDance}\r\n            actualPositions={coachData.actualPositions}\r\n            dancerDance={processedData.predictedDance}\r\n            dancerPos={processedData.predictedPos}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js",["59"],"import \"./ScreenHeader.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction ScreenHeader({ screenTitle, screenDesc }) {\r\n  const [currentDateTime, setDateTime] = useState(new Date());\r\n  const [currentDay, setDay] = useState(\"\");\r\n  const [currentDate, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function refreshClock() {\r\n      setDateTime(new Date());\r\n      var dateArray = String(currentDateTime).split(\" \");\r\n      setDay(dateArray[0]);\r\n      setDate(dateArray[2] + \" \" + dateArray[1] + \" \" + dateArray[3]);\r\n    }\r\n    const timerId = setInterval(refreshClock, 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"dashboardDesc\">\r\n        <h1>{screenTitle}</h1>\r\n        <h2>{screenDesc}</h2>\r\n      </div>\r\n      <div className=\"timestamp\">\r\n        <h1>{currentDateTime.toLocaleTimeString()}</h1>\r\n        <h2>{currentDate}</h2>\r\n        <h2>{currentDay}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenHeader;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js",["60","61","62"],"import DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"./Analytics.css\";\r\nimport Stream from \"./Stream\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Analytics({\r\n  d1HandAcc,\r\n  d2HandAcc,\r\n  d3HandAcc,\r\n  d1HandGyro,\r\n  d2HandGyro,\r\n  d3HandGyro,\r\n  emgArray,\r\n}) {\r\n  const dropdownItems = [\r\n    \"EMG\",\r\n    \"Gyroscope 1\",\r\n    \"Accelerometer 1\",\r\n    \"Gyroscope 2\",\r\n    \"Accelerometer 2\",\r\n    \"Gyroscope 3\",\r\n    \"Accelerometer 3\",\r\n  ];\r\n  const [title, setTitle] = useState(\"Accelerometer 1\");\r\n\r\n  const handleChange = (item) => {\r\n    setTitle(item);\r\n  };\r\n\r\n  const renderGraph = (choice) => {\r\n    switch (choice) {\r\n      // case \"EMG\":\r\n      //   return <Stream data={emgArray} />;\r\n      case \"Accelerometer 1\":\r\n        return <LineGraph data={d1HandAcc} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"analyticsWrapper\">\r\n      <DropdownButton id=\"dropdown\" title={title}>\r\n        {dropdownItems.map((item) => (\r\n          <Dropdown.Item onClick={() => handleChange(item)}>\r\n            {item}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      {renderGraph(title)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analytics;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\LineGraph.js",["63","64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":57,"column":22,"nodeType":"71","messageId":"72","endLine":57,"endColumn":35},{"ruleId":"69","severity":1,"message":"73","line":70,"column":7,"nodeType":"71","messageId":"72","endLine":70,"endColumn":11},{"ruleId":"74","severity":1,"message":"75","line":125,"column":6,"nodeType":"76","endLine":125,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":20,"column":6,"nodeType":"76","endLine":20,"endColumn":8,"suggestions":"79"},{"ruleId":"69","severity":1,"message":"80","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":14},{"ruleId":"69","severity":1,"message":"81","line":6,"column":10,"nodeType":"71","messageId":"72","endLine":6,"endColumn":19},{"ruleId":"82","severity":1,"message":"83","line":33,"column":5,"nodeType":"84","messageId":"85","endLine":38,"endColumn":6},{"ruleId":"69","severity":1,"message":"86","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":19},{"ruleId":"74","severity":1,"message":"87","line":25,"column":6,"nodeType":"76","endLine":25,"endColumn":12,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'setD3HandGyro' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'emgArray'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has a missing dependency: 'currentDateTime'. Either include it or remove the dependency array.",["92"],"'Stream' is defined but never used.","'useEffect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Accordion' is defined but never used.","React Hook useEffect has missing dependencies: 'aXArray', 'aYArray', 'aZArray', 'acc.aX', 'acc.aY', and 'acc.aZ'. Either include them or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [emgArray]",{"range":"100","text":"101"},"Update the dependencies array to be: [currentDateTime]",{"range":"102","text":"103"},"Update the dependencies array to be: [aXArray, aYArray, aZArray, acc.aX, acc.aY, acc.aZ, data]",{"range":"104","text":"105"},[3294,3296],"[emgArray]",[674,676],"[currentDateTime]",[560,566],"[aXArray, aYArray, aZArray, acc.aX, acc.aY, acc.aZ, data]"]