[{"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js":"1","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js":"3","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js":"4","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js":"5","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js":"6","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js":"7","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js":"8","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js":"9","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js":"10","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\HistoryScreen.js":"11","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\DashboardScreen.js":"12","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\WelcomeScreen.js":"13","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\HistoryTable.js":"14","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\context\\socket.js":"15","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\context\\inititaldata.js":"16","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\LoginScreen.js":"17","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\SignIn.js":"18","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Register.js":"19","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Pie.js":"20","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Bar.js":"21","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\TutorialScreen.js":"22"},{"size":519,"mtime":1632880674571,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1629614679416,"results":"25","hashOfConfig":"24"},{"size":1112,"mtime":1635787133333,"results":"26","hashOfConfig":"24"},{"size":1208,"mtime":1635526037414,"results":"27","hashOfConfig":"24"},{"size":2051,"mtime":1635787649520,"results":"28","hashOfConfig":"24"},{"size":4036,"mtime":1635265960108,"results":"29","hashOfConfig":"24"},{"size":1062,"mtime":1634564100355,"results":"30","hashOfConfig":"24"},{"size":1880,"mtime":1634564100351,"results":"31","hashOfConfig":"24"},{"size":1975,"mtime":1634564100356,"results":"32","hashOfConfig":"24"},{"size":1917,"mtime":1634564100353,"results":"33","hashOfConfig":"24"},{"size":540,"mtime":1635787222811,"results":"34","hashOfConfig":"24"},{"size":9033,"mtime":1635786909493,"results":"35","hashOfConfig":"24"},{"size":522,"mtime":1634620121220,"results":"36","hashOfConfig":"24"},{"size":9808,"mtime":1635681374387,"results":"37","hashOfConfig":"24"},{"size":193,"mtime":1635526869870,"results":"38","hashOfConfig":"24"},{"size":3070,"mtime":1635536443086,"results":"39","hashOfConfig":"24"},{"size":899,"mtime":1635584269130,"results":"40","hashOfConfig":"24"},{"size":1747,"mtime":1635785738954,"results":"41","hashOfConfig":"24"},{"size":1785,"mtime":1635785663214,"results":"42","hashOfConfig":"24"},{"size":682,"mtime":1635617695360,"results":"43","hashOfConfig":"24"},{"size":1064,"mtime":1635681309398,"results":"44","hashOfConfig":"24"},{"size":4369,"mtime":1635787036691,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1rbgyic",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\index.js",[],["97","98"],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\App.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\UserCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Sidebar.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\CoachCard.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\ScreenHeader.js",["99"],"import \"./ScreenHeader.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction ScreenHeader({ screenTitle, screenDesc }) {\r\n  const [currentDateTime, setDateTime] = useState(new Date());\r\n  const [currentDay, setDay] = useState(\"\");\r\n  const [currentDate, setDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    function refreshClock() {\r\n      setDateTime(new Date());\r\n      var dateArray = String(currentDateTime).split(\" \");\r\n      setDay(dateArray[0]);\r\n      setDate(dateArray[2] + \" \" + dateArray[1] + \" \" + dateArray[3]);\r\n    }\r\n    const timerId = setInterval(refreshClock, 1000);\r\n    return function cleanup() {\r\n      clearInterval(timerId);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"dashboardDesc\">\r\n        <h1>{screenTitle}</h1>\r\n        <h2>{screenDesc}</h2>\r\n      </div>\r\n      <div className=\"timestamp\">\r\n        <h1>{currentDateTime.toLocaleTimeString()}</h1>\r\n        <h2>{currentDate}</h2>\r\n        <h2>{currentDay}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScreenHeader;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Analytics.js",["100","101"],"import DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport \"./Analytics.css\";\r\nimport Stream from \"./Stream\";\r\nimport Line from \"./Line\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Analytics({\r\n  d1HandAcc,\r\n  d2HandAcc,\r\n  d3HandAcc,\r\n  d1HandGyro,\r\n  d2HandGyro,\r\n  d3HandGyro,\r\n  emgArray,\r\n}) {\r\n  const dropdownItems = [\r\n    \"EMG\",\r\n\r\n    \"Dancer 1 Accelerometer\",\r\n    \"Dancer 1 Gyroscope\",\r\n\r\n    \"Dancer 2 Accelerometer\",\r\n    \"Dancer 2 Gyroscope\",\r\n\r\n    \"Dancer 3 Accelerometer\",\r\n    \"Dancer 3 Gyroscope\",\r\n  ];\r\n\r\n  const [title, setTitle] = useState(\"EMG\");\r\n\r\n  const handleChange = (item) => {\r\n    setTitle(item);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTitle(title);\r\n  });\r\n\r\n  const renderGraph = (choice) => {\r\n    switch (choice) {\r\n      case \"EMG\":\r\n        return <Stream data={emgArray} />;\r\n      case \"Dancer 1 Accelerometer\":\r\n        return <Line data={d1HandAcc} axis={\"Accelerometer\"} />;\r\n      case \"Dancer 1 Gyroscope\":\r\n        return <Line data={d1HandGyro} axis={\"Gyroscope\"} />;\r\n      case \"Dancer 2 Accelerometer\":\r\n        return <Line data={d2HandAcc} axis={\"Accelerometer\"} />;\r\n      case \"Dancer 2 Gyroscope\":\r\n        return <Line data={d2HandGyro} axis={\"Gyroscope\"} />;\r\n      case \"Dancer 3 Accelerometer\":\r\n        return <Line data={d3HandAcc} axis={\"Accelerometer\"} />;\r\n      case \"Dancer 3 Gyroscope\":\r\n        return <Line data={d3HandGyro} axis={\"Gyroscope\"} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"analyticsWrapper\">\r\n      <DropdownButton id=\"dropdown\" title={title}>\r\n        {dropdownItems.map((item) => (\r\n          <Dropdown.Item onClick={() => handleChange(item)}>\r\n            {item}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n      {renderGraph(title)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Analytics;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Stream.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Line.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\HistoryScreen.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\DashboardScreen.js",["102"],"import \"./DashboardScreen.css\";\r\n\r\nimport UserCard from \"../components/UserCard\";\r\nimport CoachCard from \"../components/CoachCard\";\r\nimport Analytics from \"../components/Analytics\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\nimport { SocketContext } from \"../context/socket\";\r\nimport {\r\n  initalCoachData,\r\n  initialEmgArray,\r\n  initialProcessedData,\r\n  initialPredictedPos,\r\n  initialD1HandAcc,\r\n  initialD2HandAcc,\r\n  initialD3HandAcc,\r\n  initialD1HandGyro,\r\n  initialD2HandGyro,\r\n  initialD3HandGyro,\r\n} from \"../context/inititaldata\";\r\n\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DashboardScreen = () => {\r\n  // ---------------- Socket ---------------- //\r\n  const socket = useContext(SocketContext);\r\n  socket.on(\"connect\", () => {\r\n    console.log(`Client connected with socket.io ID: ${socket.id}`);\r\n  });\r\n\r\n  // ---------------- onClick ---------------- //\r\n  const toggleDisplayLogout = () => {\r\n    setDisplayLogout(!displayLogout);\r\n  };\r\n\r\n  const manualLogout = () => {\r\n    toggleDisplayLogout();\r\n    console.log(\"Manual logout clicked!\");\r\n    socket.emit(\"CLIENT_LOGOUT\");\r\n  };\r\n\r\n  // ---------------- useState ---------------- //\r\n  const [displayLogout, setDisplayLogout] = useState(false);\r\n  const [coachData, setCoachData] = useState(initalCoachData);\r\n  const [emgArray, setEmgArray] = useState(initialEmgArray);\r\n  const [processedData, setProcessedData] = useState(initialProcessedData);\r\n  const [predictedPos, setPredictedPos] = useState(initialPredictedPos);\r\n  const [d1HandAcc, setD1HandAcc] = useState(initialD1HandAcc);\r\n  const [d2HandAcc, setD2HandAcc] = useState(initialD2HandAcc);\r\n  const [d3HandAcc, setD3HandAcc] = useState(initialD3HandAcc);\r\n  const [d1HandGyro, setD1HandGyro] = useState(initialD1HandGyro);\r\n  const [d2HandGyro, setD2HandGyro] = useState(initialD2HandGyro);\r\n  const [d3HandGyro, setD3HandGyro] = useState(initialD3HandGyro);\r\n\r\n  // ---------------- Sockets ---------------- //\r\n  useEffect(() => {\r\n    var d1Time = 1;\r\n    var d2Time = 1;\r\n    var d3Time = 1;\r\n\r\n    socket.on(\"SERVER_D1_DATA\", (FinalData) => {\r\n      let tempD1HandAcc = d1HandAcc;\r\n      let tempD1HandGyro = d1HandGyro;\r\n\r\n      if (tempD1HandAcc[0].data.length > 10) {\r\n        tempD1HandAcc[0].data.shift();\r\n        tempD1HandAcc[1].data.shift();\r\n        tempD1HandAcc[2].data.shift();\r\n      }\r\n      if (tempD1HandGyro[0].data.length > 10) {\r\n        tempD1HandGyro[0].data.shift();\r\n        tempD1HandGyro[1].data.shift();\r\n        tempD1HandGyro[2].data.shift();\r\n      }\r\n      tempD1HandAcc[0].data.push({ x: d1Time, y: FinalData.aX });\r\n      tempD1HandAcc[1].data.push({ x: d1Time, y: FinalData.aY });\r\n      tempD1HandAcc[2].data.push({ x: d1Time, y: FinalData.aZ });\r\n\r\n      tempD1HandGyro[0].data.push({ x: d1Time, y: FinalData.gX });\r\n      tempD1HandGyro[1].data.push({ x: d1Time, y: FinalData.gY });\r\n      tempD1HandGyro[2].data.push({ x: d1Time, y: FinalData.gZ });\r\n\r\n      d1Time += 1;\r\n      setD1HandAcc(tempD1HandAcc);\r\n      setD1HandGyro(tempD1HandGyro);\r\n    });\r\n\r\n    socket.on(\"SERVER_D2_DATA\", (FinalData) => {\r\n      let tempD2HandAcc = d2HandAcc;\r\n      let tempD2HandGyro = d2HandGyro;\r\n\r\n      if (tempD2HandAcc[0].data.length > 10) {\r\n        tempD2HandAcc[0].data.shift();\r\n        tempD2HandAcc[1].data.shift();\r\n        tempD2HandAcc[2].data.shift();\r\n      }\r\n      if (tempD2HandGyro[0].data.length > 10) {\r\n        tempD2HandGyro[0].data.shift();\r\n        tempD2HandGyro[1].data.shift();\r\n        tempD2HandGyro[2].data.shift();\r\n      }\r\n      tempD2HandAcc[0].data.push({ x: d2Time, y: FinalData.aX });\r\n      tempD2HandAcc[1].data.push({ x: d2Time, y: FinalData.aY });\r\n      tempD2HandAcc[2].data.push({ x: d2Time, y: FinalData.aZ });\r\n\r\n      tempD2HandGyro[0].data.push({ x: d2Time, y: FinalData.gX });\r\n      tempD2HandGyro[1].data.push({ x: d2Time, y: FinalData.gY });\r\n      tempD2HandGyro[2].data.push({ x: d2Time, y: FinalData.gZ });\r\n\r\n      d2Time += 1;\r\n      setD2HandAcc(tempD2HandAcc);\r\n      setD2HandGyro(tempD2HandGyro);\r\n    });\r\n\r\n    socket.on(\"SERVER_D3_DATA\", (FinalData) => {\r\n      let tempD3HandAcc = d3HandAcc;\r\n      let tempD3HandGyro = d3HandGyro;\r\n\r\n      if (tempD3HandAcc[0].data.length > 10) {\r\n        tempD3HandAcc[0].data.shift();\r\n        tempD3HandAcc[1].data.shift();\r\n        tempD3HandAcc[2].data.shift();\r\n      }\r\n      if (tempD3HandGyro[0].data.length > 10) {\r\n        tempD3HandGyro[0].data.shift();\r\n        tempD3HandGyro[1].data.shift();\r\n        tempD3HandGyro[2].data.shift();\r\n      }\r\n      tempD3HandAcc[0].data.push({ x: d3Time, y: FinalData.aX });\r\n      tempD3HandAcc[1].data.push({ x: d3Time, y: FinalData.aY });\r\n      tempD3HandAcc[2].data.push({ x: d3Time, y: FinalData.aZ });\r\n\r\n      tempD3HandGyro[0].data.push({ x: d3Time, y: FinalData.gX });\r\n      tempD3HandGyro[1].data.push({ x: d3Time, y: FinalData.gY });\r\n      tempD3HandGyro[2].data.push({ x: d3Time, y: FinalData.gZ });\r\n\r\n      d3Time += 1;\r\n      setD3HandAcc(tempD3HandAcc);\r\n      setD3HandGyro(tempD3HandGyro);\r\n    });\r\n\r\n    socket.on(\"SERVER_EMG_DATA\", (FinalData) => {\r\n      let newArray = emgArray;\r\n      newArray.push(FinalData);\r\n      setEmgArray(newArray);\r\n    });\r\n\r\n    socket.on(\"SERVER_PROCESSED_DATA\", (ProcessedData) => {\r\n      setProcessedData(ProcessedData);\r\n      setPredictedPos(ProcessedData.predictedPos);\r\n    });\r\n\r\n    socket.on(\"SERVER_COACH_DATA\", (coachData) => {\r\n      setCoachData(coachData);\r\n    });\r\n\r\n    socket.on(\"SERVER_LOGOUT\", () => {\r\n      toggleDisplayLogout();\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <div className=\"dashboard_wrapper\">\r\n        <ScreenHeader\r\n          screenTitle=\"Dashboard\"\r\n          screenDesc=\"A closer look at your performance\"\r\n        />\r\n        <div className={displayLogout ? \"logout_bg\" : \"logout_bg_hidden\"}></div>\r\n        <div\r\n          className={displayLogout ? \"logout_prompt\" : \"logout_prompt_hidden\"}\r\n        >\r\n          <div className=\"logout_msg\">\r\n            We have detected a logout dance move!\r\n            <div className=\"sub_msg\">Would you like to end the session?</div>\r\n          </div>\r\n          <div className=\"logout_options\">\r\n            <Button\r\n              className=\"option_btn\"\r\n              variant=\"outline-secondary\"\r\n              onClick={() => toggleDisplayLogout()}\r\n            >\r\n              Continue Dancing\r\n            </Button>{\" \"}\r\n            <Link to=\"/history\">\r\n              <Button className=\"option_btn\" variant=\"danger\">\r\n                End Session\r\n              </Button>{\" \"}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub_dashboard_wrapper\">\r\n          <div className=\"info_wrapper\">\r\n            <div className=\"users_wrapper\">\r\n              <UserCard\r\n                dancerId=\"Jess\"\r\n                syncDelay={processedData.syncDelay}\r\n                currentDance={processedData.predictedDance1}\r\n                currentPos={predictedPos.indexOf(1)}\r\n                coachDance={coachData.actualDance}\r\n                coachPos={coachData.actualPositions}\r\n              />\r\n              <UserCard\r\n                dancerId=\"Amir\"\r\n                syncDelay={processedData.syncDelay}\r\n                currentDance={processedData.predictedDance2}\r\n                currentPos={predictedPos.indexOf(2)}\r\n                coachDance={coachData.actualDance}\r\n                coachPos={coachData.actualPositions}\r\n              />\r\n              <UserCard\r\n                dancerId=\"Billy\"\r\n                syncDelay={processedData.syncDelay}\r\n                currentDance={processedData.predictedDance3}\r\n                currentPos={predictedPos.indexOf(3)}\r\n                coachDance={coachData.actualDance}\r\n                coachPos={coachData.actualPositions}\r\n              />\r\n            </div>\r\n            <div className=\"graph_wrapper\">\r\n              <Analytics\r\n                d1HandAcc={d1HandAcc}\r\n                d2HandAcc={d2HandAcc}\r\n                d3HandAcc={d3HandAcc}\r\n                d1HandGyro={d1HandGyro}\r\n                d2HandGyro={d2HandGyro}\r\n                d3HandGyro={d3HandGyro}\r\n                emgArray={emgArray.slice(-20)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"coach_wrapper\">\r\n            <CoachCard\r\n              currentDance={coachData.actualDance}\r\n              actualPositions={coachData.actualPositions}\r\n              dancerDance={processedData.predictedDance}\r\n              dancerPos={processedData.predictedPos}\r\n            />\r\n            <Button\r\n              variant=\"danger\"\r\n              className=\"end_button\"\r\n              onClick={() => manualLogout()}\r\n            >\r\n              End Session\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\WelcomeScreen.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\HistoryTable.js",["103","104","105","106","107"],"import axios from \"axios\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport Pie from \"../components/Pie\";\r\nimport Bar from \"../components/Bar\";\r\n\r\nimport \"./HistoryTable.css\";\r\n\r\nfunction HistoryTable() {\r\n  const [historyData, setHistoryData] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [modalRes, setModalRes] = useState([]);\r\n  const [dances, setDances] = useState([]);\r\n  const [uniqueDances, setUniqueDances] = useState([]);\r\n  const [aveSyncDelay, setAveSyncDelay] = useState([]);\r\n  const [accList, setAccList] = useState([]);\r\n  const [pieData, setPieData] = useState({});\r\n  const [barData, setBarData] = useState({});\r\n\r\n  function getMode(array) {\r\n    if (array.length == 0) return null;\r\n    var modeMap = {};\r\n    var maxEl = array[0],\r\n      maxCount = 1;\r\n    for (var i = 0; i < array.length; i++) {\r\n      var el = array[i];\r\n      if (modeMap[el] == null) modeMap[el] = 1;\r\n      else modeMap[el]++;\r\n      if (modeMap[el] > maxCount) {\r\n        maxEl = el;\r\n        maxCount = modeMap[el];\r\n      }\r\n    }\r\n    return maxEl;\r\n  }\r\n\r\n  function getAveSync(array) {\r\n    var sum = 0;\r\n    array.forEach(function (item) {\r\n      sum += Number(item.syncDelay);\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  function getAccuracy(array) {\r\n    var mode = \"\";\r\n    var accuracy = [0, 0, 0];\r\n    array.forEach(function (item) {\r\n      mode = getMode([\r\n        item.predictedDance1,\r\n        item.predictedDance2,\r\n        item.predictedDance3,\r\n      ]);\r\n      if (item.predictedDance1 === mode) accuracy[0] += 1;\r\n      if (item.predictedDance2 === mode) accuracy[1] += 1;\r\n      if (item.predictedDance3 === mode) accuracy[2] += 1;\r\n    });\r\n    return accuracy;\r\n  }\r\n\r\n  function getBarData(array) {\r\n    const map = {\r\n      Window360: 0,\r\n      Cowboy: 0,\r\n      Scarecrow: 0,\r\n      JamesBond: 0,\r\n      Snake: 0,\r\n      Dab: 0,\r\n      Mermaid: 0,\r\n      Pushback: 0,\r\n      Logout: 0,\r\n    };\r\n    array.forEach(function (item) {\r\n      var mode = getMode([\r\n        item.predictedDance1,\r\n        item.predictedDance2,\r\n        item.predictedDance3,\r\n      ]);\r\n      if (item.predictedDance1 != mode) map[mode] += 1;\r\n      if (item.predictedDance2 != mode) map[mode] += 1;\r\n      if (item.predictedDance3 != mode) map[mode] += 1;\r\n    });\r\n    return map;\r\n  }\r\n\r\n  function getPieData(array) {\r\n    const map = {\r\n      Window360: 0,\r\n      Cowboy: 0,\r\n      Scarecrow: 0,\r\n      JamesBond: 0,\r\n      Snake: 0,\r\n      Dab: 0,\r\n      Mermaid: 0,\r\n      Pushback: 0,\r\n      Logout: 0,\r\n    };\r\n    array.forEach(function (item) {\r\n      var mode = getMode([\r\n        item.predictedDance1,\r\n        item.predictedDance2,\r\n        item.predictedDance3,\r\n      ]);\r\n      map[mode] += 1;\r\n    });\r\n    return map;\r\n  }\r\n\r\n  const handleRowClick = (rowData, rowMeta) => {\r\n    var id = rowData[0];\r\n    axios.get(`http://localhost:5000/api/history/${id}`).then((res) => {\r\n      toggleModal();\r\n      console.log(res.data[0]);\r\n      setModalRes(res.data[0]);\r\n      var dancesList = res.data[0].overallProcessedData.map(\r\n        (item) => item.predictedDance1\r\n      );\r\n      var uniqueDancesSet = new Set(dancesList);\r\n      setDances(dancesList);\r\n      setUniqueDances(uniqueDancesSet);\r\n      setAveSyncDelay(getAveSync(res.data[0].overallProcessedData));\r\n      setAccList(getAccuracy(res.data[0].overallProcessedData));\r\n      setPieData(getPieData(res.data[0].overallProcessedData));\r\n      setBarData(getBarData(res.data[0].overallProcessedData));\r\n    });\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const tableColumns = [\r\n    {\r\n      name: \"_id\",\r\n      label: \"ID\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n        display: false,\r\n      },\r\n    },\r\n    {\r\n      name: \"date\",\r\n      label: \"Date\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n        sortDirection: \"asc\",\r\n      },\r\n    },\r\n    {\r\n      name: \"time\",\r\n      label: \"Time\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n        sortDirection: \"asc\",\r\n      },\r\n    },\r\n    {\r\n      name: \"duration\",\r\n      label: \"Duration (sec)\",\r\n      options: {\r\n        filter: false,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"\",\r\n      options: {\r\n        customBodyRender: (value, tableMeta, updateValue) => {\r\n          return (\r\n            <Button className=\"option_btn\" variant=\"outline-success\">\r\n              View\r\n            </Button>\r\n          );\r\n        },\r\n        sort: false,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const tableOptions = {\r\n    filterType: \"checkbox\",\r\n    tableBodyHeight: \"500px\",\r\n    tableBodyMaxHeight: \"500px\",\r\n    selectableRows: \"none\",\r\n    expandableRowsOnClick: true,\r\n    onRowClick: handleRowClick,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:5000/api/history\").then((res) => {\r\n      var result = res.data;\r\n      setHistoryData(result);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        className={modal ? \"history_bg\" : \"history_bg_hidden\"}\r\n        onClick={() => toggleModal()}\r\n      ></div>\r\n      <div className={modal ? \"history_modal\" : \"history_modal_hidden\"}>\r\n        <div className=\"modal_header\">\r\n          <div className=\"modal_header_component\">\r\n            <div className=\"sub_header\">Date</div> <br />\r\n            {modalRes.date}\r\n          </div>\r\n          <div className=\"modal_header_component\">\r\n            <div className=\"sub_header\">Time</div>\r\n            <br />\r\n            {modalRes.time}\r\n          </div>\r\n          <div className=\"modal_header_component\">\r\n            <div className=\"sub_header\">Session Duration</div>\r\n            <br />\r\n            {modalRes.duration}s\r\n          </div>\r\n        </div>\r\n        <div className=\"modal_content\">\r\n          <div className=\"modal_content_1\">\r\n            <div className=\"sub2_header\">Dances Performed</div>\r\n            <Pie\r\n              data={[\r\n                {\r\n                  id: \"Window360\",\r\n                  label: \"Window360\",\r\n                  value: pieData[\"Window360\"],\r\n                  color: \"hsl(213, 70%, 50%)\",\r\n                },\r\n                {\r\n                  id: \"Cowboy\",\r\n                  label: \"Cowboy\",\r\n                  value: pieData[\"Cowboy\"],\r\n                  color: \"hsl(30, 70%, 50%)\",\r\n                },\r\n                {\r\n                  id: \"Scarecrow\",\r\n                  label: \"Scarecrow\",\r\n                  value: pieData[\"Scarecrow\"],\r\n                  color: \"hsl(114, 70%, 50%)\",\r\n                },\r\n                {\r\n                  id: \"JamesBond\",\r\n                  label: \"JamesBond\",\r\n                  value: pieData[\"JamesBond\"],\r\n                  color: \"hsl(198, 70%, 50%)\",\r\n                },\r\n                {\r\n                  id: \"Snake\",\r\n                  label: \"Snake\",\r\n                  value: pieData[\"Snake\"],\r\n                  color: \"hsl(117, 70%, 50%)\",\r\n                },\r\n                {\r\n                  id: \"Dab\",\r\n                  label: \"Dab\",\r\n                  value: pieData[\"Dab\"],\r\n                  color: \"hsl(104, 70%, 50%)\",\r\n                },\r\n                {\r\n                  id: \"Mermaid\",\r\n                  label: \"Mermaid\",\r\n                  value: pieData[\"Mermaid\"],\r\n                  color: \"hsl(98, 70%, 50%)\",\r\n                },\r\n                {\r\n                  id: \"Pushback\",\r\n                  label: \"Pushback\",\r\n                  value: pieData[\"Pushback\"],\r\n                  color: \"hsl(120, 70%, 50%)\",\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n          <div className=\"modal_content_1\">\r\n            <div className=\"sub2_header\">Mistakes Made</div>\r\n            <Bar\r\n              data={[\r\n                {\r\n                  dance: \"Window360\",\r\n                  window360: barData[\"Window360\"],\r\n                },\r\n                {\r\n                  dance: \"Cowboy\",\r\n                  cowboy: barData[\"Cowboy\"],\r\n                },\r\n                {\r\n                  dance: \"Scarecrow\",\r\n                  scarecrow: barData[\"Scarecrow\"],\r\n                },\r\n                {\r\n                  dance: \"JamesBond\",\r\n                  jamesbond: barData[\"JamesBond\"],\r\n                },\r\n                {\r\n                  dance: \"Snake\",\r\n                  snake: barData[\"Snake\"],\r\n                },\r\n                {\r\n                  dance: \"Dab\",\r\n                  dab: barData[\"Dab\"],\r\n                },\r\n                {\r\n                  dance: \"Mermaid\",\r\n                  mermaid: barData[\"Mermaid\"],\r\n                },\r\n                {\r\n                  dance: \"Pushback\",\r\n                  pushback: barData[\"Pushback\"],\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n          <div className=\"modal_content_1\">\r\n            {/* <div className=\"sub2_header\">Most Frequent Dance</div>\r\n            <br />\r\n            {getMode(dances)} */}\r\n            <div className=\"sub2_header\">Average Sync Delay</div>\r\n            <br />\r\n            {aveSyncDelay}s<div className=\"sub2_header\">Dancer Accuracy</div>\r\n            <br />\r\n            Dancer 1 - {((accList[0] / dances.length) * 100).toFixed(1)}%\r\n            <br />\r\n            Dancer 2 - {((accList[1] / dances.length) * 100).toFixed(1)}%\r\n            <br /> Dancer 3 - {((accList[2] / dances.length) * 100).toFixed(1)}%\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <MUIDataTable\r\n        className=\"history_table\"\r\n        // title={\"History\"}\r\n        data={historyData}\r\n        columns={tableColumns}\r\n        options={tableOptions}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryTable;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\context\\socket.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\context\\inititaldata.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\LoginScreen.js",["108","109"],"import \"./LoginScreen.css\";\r\nimport loginPhoto from \"../images/loginPhoto.jpg\";\r\nimport blob1 from \"../images/blob1.svg\";\r\nimport blob2 from \"../images/blob2.svg\";\r\n\r\nimport Register from \"../components/Register\";\r\nimport SignIn from \"../components/SignIn\";\r\nimport { useState } from \"react\";\r\n\r\nfunction LoginScreen() {\r\n  const [signIn, setSignIn] = useState(false);\r\n\r\n  const toggleForm = () => {\r\n    setSignIn(!signIn);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login_wrapper\">\r\n      <div className=\"login_photo\">\r\n        <img src={loginPhoto} alt=\"LoginPhoto\" />\r\n      </div>\r\n      <div className=\"login_form_wrapper\">\r\n        <img className=\"blob1\" src={blob1} />\r\n        <img className=\"blob2\" src={blob2} onClick={() => toggleForm()} />\r\n        <div className=\"login_form\">{signIn ? <SignIn /> : <Register />}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\SignIn.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Register.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Pie.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\components\\Bar.js",[],"C:\\Users\\Amir\\Desktop\\Capstone\\Dashboard\\frontend\\src\\screens\\TutorialScreen.js",["110"],"import \"./TutorialScreen.css\";\r\nimport ScreenHeader from \"../components/ScreenHeader\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { useState } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nfunction TutorialScreen() {\r\n  const [vid, setVid] = useState();\r\n  const handleClick = (dance) => {\r\n    console.log(dance);\r\n    switch (dance) {\r\n      case \"cowboy\":\r\n        setVid(\"/videos/cowboy.mp4\");\r\n        break;\r\n      case \"dab\":\r\n        setVid(\"/videos/dab.mp4\");\r\n        break;\r\n      case \"jamesbond\":\r\n        setVid(\"/videos/jamesbond.mp4\");\r\n        break;\r\n      case \"mermaid\":\r\n        setVid(\"/videos/mermaid.mov\");\r\n        break;\r\n      case \"pushback\":\r\n        setVid(\"/videos/pushback.mov\");\r\n        break;\r\n      case \"scarecrow\":\r\n        setVid(\"/videos/scarecrow.mov\");\r\n        break;\r\n      case \"snake\":\r\n        setVid(\"/videos/snake.mp4\");\r\n        break;\r\n      case \"window360\":\r\n        setVid(\"/videos/window360.mov\");\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Sidebar />\r\n      <div className=\"tutorial_wrapper\">\r\n        <ScreenHeader\r\n          screenTitle=\"Tutorial\"\r\n          screenDesc=\"To make you a beter dancer\"\r\n        />\r\n        <div className=\"sub_tutorial_wrapper\">\r\n          <div className=\"video_wrapper\">\r\n            <ReactPlayer\r\n              className=\"player\"\r\n              url={vid}\r\n              height=\"80vh\"\r\n              width=\"30vw\"\r\n              volume={0}\r\n              loop={true}\r\n              playing={true}\r\n            />\r\n          </div>\r\n          <div className=\"grid_wrapper\">\r\n            <div className=\"img_overlay\">\r\n              <div className=\"ovl\">Cowboy</div>\r\n              <img\r\n                className=\"thumbnail_img\"\r\n                src=\"thumbnailimages/cowboy.jpg\"\r\n                alt=\"cowboy\"\r\n                onClick={() => handleClick(\"cowboy\")}\r\n              />\r\n            </div>\r\n            <div className=\"img_overlay\">\r\n              <div className=\"ovl\">Dab</div>\r\n              <img\r\n                className=\"thumbnail_img\"\r\n                src=\"thumbnailimages/dab.jpg\"\r\n                alt=\"dab\"\r\n                onClick={() => handleClick(\"dab\")}\r\n              />\r\n            </div>\r\n            <div className=\"img_overlay\">\r\n              <div className=\"ovl\">JamesBond</div>\r\n              <img\r\n                className=\"thumbnail_img\"\r\n                src=\"thumbnailimages/jamesbond.jpg\"\r\n                alt=\"jamesbond\"\r\n                onClick={() => handleClick(\"jamesbond\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"img_overlay\">\r\n              <div className=\"ovl\">Mermaid</div>\r\n              <img\r\n                className=\"thumbnail_img\"\r\n                src=\"thumbnailimages/mermaid.jpg\"\r\n                alt=\"mermaid\"\r\n                onClick={() => handleClick(\"mermaid\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"img_overlay\">\r\n              <div className=\"ovl\">Pushback</div>\r\n              <img\r\n                className=\"thumbnail_img\"\r\n                src=\"thumbnailimages/pushback.jpg\"\r\n                alt=\"pushback\"\r\n                onClick={() => handleClick(\"pushback\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"img_overlay\">\r\n              <div className=\"ovl\">Scarecrow</div>\r\n              <img\r\n                className=\"thumbnail_img\"\r\n                src=\"thumbnailimages/scarecrow.jpg\"\r\n                alt=\"scarecrow\"\r\n                onClick={() => handleClick(\"scarecrow\")}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"img_overlay\">\r\n              <div className=\"ovl\">Snake</div>\r\n              <img\r\n                className=\"thumbnail_img\"\r\n                src=\"thumbnailimages/snake.jpg\"\r\n                alt=\"snake\"\r\n                onClick={() => handleClick(\"snake\")}\r\n              />\r\n            </div>\r\n            <div className=\"img_overlay\">\r\n              <div className=\"ovl\">Window360</div>\r\n              <img\r\n                className=\"thumbnail_img\"\r\n                src=\"thumbnailimages/window360.png\"\r\n                alt=\"window360\"\r\n                onClick={() => handleClick(\"window360\")}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TutorialScreen;\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":20,"column":6,"nodeType":"117","endLine":20,"endColumn":8,"suggestions":"118"},{"ruleId":"115","severity":1,"message":"119","line":37,"column":3,"nodeType":"120","endLine":37,"endColumn":12,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":42,"column":5,"nodeType":"124","messageId":"125","endLine":57,"endColumn":6},{"ruleId":"115","severity":1,"message":"126","line":163,"column":6,"nodeType":"117","endLine":163,"endColumn":8,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":17,"column":10,"nodeType":"120","messageId":"130","endLine":17,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":24,"column":22,"nodeType":"133","messageId":"134","endLine":24,"endColumn":24},{"ruleId":"131","severity":1,"message":"135","line":82,"column":32,"nodeType":"133","messageId":"134","endLine":82,"endColumn":34},{"ruleId":"131","severity":1,"message":"135","line":83,"column":32,"nodeType":"133","messageId":"134","endLine":83,"endColumn":34},{"ruleId":"131","severity":1,"message":"135","line":84,"column":32,"nodeType":"133","messageId":"134","endLine":84,"endColumn":34},{"ruleId":"136","severity":1,"message":"137","line":23,"column":9,"nodeType":"138","endLine":23,"endColumn":46},{"ruleId":"136","severity":1,"message":"137","line":24,"column":9,"nodeType":"138","endLine":24,"endColumn":75},{"ruleId":"122","severity":1,"message":"123","line":11,"column":5,"nodeType":"124","messageId":"125","endLine":36,"endColumn":6},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentDateTime'. Either include it or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect contains a call to 'setTitle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [title] as a second argument to the useEffect Hook.","Identifier",["142"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'd1HandAcc', 'd1HandGyro', 'd2HandAcc', 'd2HandGyro', 'd3HandAcc', 'd3HandGyro', 'emgArray', 'socket', and 'toggleDisplayLogout'. Either include them or remove the dependency array.",["143"],"no-unused-vars","'uniqueDances' is assigned a value but never used.","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [currentDateTime]",{"range":"150","text":"151"},"Add dependencies array: [title]",{"range":"152","text":"153"},"Update the dependencies array to be: [d1HandAcc, d1HandGyro, d2HandAcc, d2HandGyro, d3HandAcc, d3HandGyro, emgArray, socket, toggleDisplayLogout]",{"range":"154","text":"155"},[674,676],"[currentDateTime]",[763,763],", [title]",[5711,5713],"[d1HandAcc, d1HandGyro, d2HandAcc, d2HandGyro, d3HandAcc, d3HandGyro, emgArray, socket, toggleDisplayLogout]"]