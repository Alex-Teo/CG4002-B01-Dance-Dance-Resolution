-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mlp_dance3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    S_AXIS_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    S_AXIS_V_TVALID : IN STD_LOGIC;
    S_AXIS_V_TREADY : OUT STD_LOGIC;
    M_AXIS_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    M_AXIS_V_TVALID : OUT STD_LOGIC;
    M_AXIS_V_TREADY : IN STD_LOGIC );
end;


architecture behav of mlp_dance3 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mlp_dance3_mlp_dance3,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.853400,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=15359,HLS_SYN_LUT=10565,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal S_AXIS_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal reg_679 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal reg_685 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_691 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_697 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_703 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_709 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_715 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_721 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_727 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_733 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_739 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_745 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_751 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_757 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_763 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_769 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_775 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_781 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_787 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_793 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_799 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_805 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_811 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_817 : STD_LOGIC_VECTOR (31 downto 0);
    signal staged_3_load_fu_828_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal staged_3_reg_1651 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal in_data_fu_978_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln137_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln137_reg_1727 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln137_1_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln137_1_reg_1732 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln142_fu_1019_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal input_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal input_ce0 : STD_LOGIC;
    signal input_we0 : STD_LOGIC;
    signal input_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_ce1 : STD_LOGIC;
    signal input_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal weights_0_ce0 : STD_LOGIC;
    signal weights_0_we0 : STD_LOGIC;
    signal weights_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_0_ce1 : STD_LOGIC;
    signal weights_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal bias_0_ce0 : STD_LOGIC;
    signal bias_0_we0 : STD_LOGIC;
    signal bias_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_ap_done : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_ap_idle : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_ap_ready : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_ce0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_ce1 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_ce0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_ce1 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_bias_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_bias_0_ce0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_7_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_7_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_6_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_6_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_5_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_5_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_4_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_4_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_3_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_3_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_2_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_2_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_1_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_1_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_0_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_0_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_done : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_idle : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_ready : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_S_AXIS_V_TREADY : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_ce0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_we0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_done : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_idle : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_ready : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_ce0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_we0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_S_AXIS_V_TREADY : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_ap_done : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_ap_idle : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_ap_ready : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_2_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_2_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_1_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_1_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_0_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_0_1_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_ce : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_output_fu_484_ap_start : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_output_fu_484_ap_done : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_output_fu_484_ap_idle : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_output_fu_484_ap_ready : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TREADY : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TVALID : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_done : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_idle : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_ready : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_S_AXIS_V_TREADY : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_2_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_1_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_0_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_2_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_1_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_0_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_2_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_1_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_0_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_2_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_1_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_0_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_2_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_1_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_0_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_2_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_1_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_0_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_2_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_1_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_0_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_2_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_2_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_1_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_0_2_out_ap_vld : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_done : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_idle : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_ready : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_S_AXIS_V_TREADY : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_ce0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_we0 : STD_LOGIC;
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_staged_2_phi_fu_376_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal staged_2_reg_372 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal staged_1_reg_386 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start_reg : STD_LOGIC := '0';
    signal grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_mlp_dance3_Pipeline_output_fu_484_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal buffer_0_0_0546_fu_70 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_0_1_0547_fu_74 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_0_2_0548_fu_78 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_0_3_0549_fu_82 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_0_4_0550_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_0_5_0551_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_0_6_0552_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_0_7_0553_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_1_0_025_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_1_1_026_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_1_2_027_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_0_0_01_fu_114 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_0_1_02_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_0_2_03_fu_122 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_1_0_04_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_1_1_05_fu_130 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_1_2_06_fu_134 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_2_0_07_fu_138 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_2_1_08_fu_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_2_2_09_fu_146 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_3_0_010_fu_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_3_1_011_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_3_2_012_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_4_0_013_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_4_1_014_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_4_2_015_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_5_0_016_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_5_1_017_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_5_2_018_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_6_0_019_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_6_1_020_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_6_2_021_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_0_022_fu_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_023_fu_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_2_024_fu_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal staged_fu_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_554_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln145_fu_974_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_983_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln137_fu_993_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln137_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln137_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_554_ce : STD_LOGIC;
    signal grp_fu_554_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1742_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1742_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1742_ce : STD_LOGIC;
    signal grp_fu_1746_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1746_ce : STD_LOGIC;
    signal grp_fu_1750_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1750_ce : STD_LOGIC;
    signal grp_fu_1754_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1754_ce : STD_LOGIC;
    signal grp_fu_1758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1758_ce : STD_LOGIC;
    signal grp_fu_1762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1762_ce : STD_LOGIC;
    signal grp_fu_1766_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1766_ce : STD_LOGIC;
    signal grp_fu_1770_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1770_ce : STD_LOGIC;
    signal grp_fu_1774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1774_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal regslice_both_S_AXIS_V_U_apdone_blk : STD_LOGIC;
    signal S_AXIS_V_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal S_AXIS_V_TVALID_int_regslice : STD_LOGIC;
    signal S_AXIS_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_S_AXIS_V_U_ack_in : STD_LOGIC;
    signal regslice_both_M_AXIS_V_U_apdone_blk : STD_LOGIC;
    signal M_AXIS_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_M_AXIS_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mlp_dance3_mlp_dance3_Pipeline_layer0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buffer_0_7_0553 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_6_0552 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_5_0551 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_4_0550 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_3_0549 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_2_0548 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_1_0547 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_0_0546 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weights_0_ce1 : OUT STD_LOGIC;
        weights_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_0_ce0 : OUT STD_LOGIC;
        bias_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_7_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_7_1_out_ap_vld : OUT STD_LOGIC;
        buffer_0_6_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_6_1_out_ap_vld : OUT STD_LOGIC;
        buffer_0_5_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_5_1_out_ap_vld : OUT STD_LOGIC;
        buffer_0_4_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_4_1_out_ap_vld : OUT STD_LOGIC;
        buffer_0_3_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_3_1_out_ap_vld : OUT STD_LOGIC;
        buffer_0_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_2_1_out_ap_vld : OUT STD_LOGIC;
        buffer_0_1_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_1_1_out_ap_vld : OUT STD_LOGIC;
        buffer_0_0_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_0_1_out_ap_vld : OUT STD_LOGIC;
        grp_fu_1742_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1742_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1742_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1742_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1742_p_ce : OUT STD_LOGIC;
        grp_fu_554_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_554_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_554_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_554_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_554_p_ce : OUT STD_LOGIC );
    end component;


    component mlp_dance3_mlp_dance3_Pipeline_retrieve_inputs IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S_AXIS_V_TVALID : IN STD_LOGIC;
        S_AXIS_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        S_AXIS_V_TREADY : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_we0 : OUT STD_LOGIC;
        input_r_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mlp_dance3_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S_AXIS_V_TVALID : IN STD_LOGIC;
        weights_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weights_0_ce0 : OUT STD_LOGIC;
        weights_0_we0 : OUT STD_LOGIC;
        weights_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        S_AXIS_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        S_AXIS_V_TREADY : OUT STD_LOGIC );
    end component;


    component mlp_dance3_mlp_dance3_Pipeline_layer1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buffer_1_2_027 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_1_1_026 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_1_0_025 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_0_01 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_1_02 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_2_03 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_0_04 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_1_05 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_2_06 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_0_07 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_1_08 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_2_09 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_0_010 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_1_011 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_2_012 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_0_013 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_1_014 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_2_015 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_0_016 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_1_017 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_2_018 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_0_019 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_1_020 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_2_021 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_7_0_022 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_7_1_023 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_7_2_024 : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_0_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_1_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_2_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_3_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_4_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_5_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_6_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_0_7_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_1_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_1_2_1_out_ap_vld : OUT STD_LOGIC;
        buffer_1_1_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_1_1_1_out_ap_vld : OUT STD_LOGIC;
        buffer_1_0_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        buffer_1_0_1_out_ap_vld : OUT STD_LOGIC;
        grp_fu_1742_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1742_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1742_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1742_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1742_p_ce : OUT STD_LOGIC;
        grp_fu_1746_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1746_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1746_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1746_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1746_p_ce : OUT STD_LOGIC;
        grp_fu_1750_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1750_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1750_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1750_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1750_p_ce : OUT STD_LOGIC;
        grp_fu_1754_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1754_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1754_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1754_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1754_p_ce : OUT STD_LOGIC;
        grp_fu_1758_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1758_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1758_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1758_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1758_p_ce : OUT STD_LOGIC;
        grp_fu_1762_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1762_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1762_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1762_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1762_p_ce : OUT STD_LOGIC;
        grp_fu_1766_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1766_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1766_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1766_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1766_p_ce : OUT STD_LOGIC;
        grp_fu_1770_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1770_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1770_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1770_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1770_p_ce : OUT STD_LOGIC;
        grp_fu_1774_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1774_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1774_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1774_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1774_p_ce : OUT STD_LOGIC;
        grp_fu_554_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_554_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_554_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_554_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_554_p_ce : OUT STD_LOGIC );
    end component;


    component mlp_dance3_mlp_dance3_Pipeline_output IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        M_AXIS_V_TREADY : IN STD_LOGIC;
        buffer_1_0_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_1_1_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        buffer_1_2_1_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        M_AXIS_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        M_AXIS_V_TVALID : OUT STD_LOGIC );
    end component;


    component mlp_dance3_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S_AXIS_V_TVALID : IN STD_LOGIC;
        weights_1_7_2_024 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_7_1_023 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_7_0_022 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_2_021 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_1_020 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_0_019 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_2_018 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_1_017 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_0_016 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_2_015 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_1_014 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_0_013 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_2_012 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_1_011 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_0_010 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_2_09 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_1_08 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_0_07 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_2_06 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_1_05 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_0_04 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_2_03 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_1_02 : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_0_01 : IN STD_LOGIC_VECTOR (31 downto 0);
        S_AXIS_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        S_AXIS_V_TREADY : OUT STD_LOGIC;
        weights_1_7_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_7_2_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_7_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_7_1_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_7_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_7_0_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_6_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_2_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_6_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_1_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_6_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_6_0_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_5_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_2_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_5_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_1_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_5_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_5_0_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_4_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_2_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_4_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_1_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_4_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_4_0_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_3_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_2_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_3_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_1_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_3_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_3_0_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_2_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_2_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_2_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_1_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_2_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_2_0_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_1_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_2_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_1_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_1_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_1_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_1_0_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_0_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_2_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_0_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_1_2_out_ap_vld : OUT STD_LOGIC;
        weights_1_0_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        weights_1_0_0_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component mlp_dance3_mlp_dance3_Pipeline_loadbias0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S_AXIS_V_TVALID : IN STD_LOGIC;
        S_AXIS_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        S_AXIS_V_TREADY : OUT STD_LOGIC;
        bias_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        bias_0_ce0 : OUT STD_LOGIC;
        bias_0_we0 : OUT STD_LOGIC;
        bias_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mlp_dance3_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mlp_dance3_input IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mlp_dance3_weights_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mlp_dance3_bias_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mlp_dance3_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    input_U : component mlp_dance3_input
    generic map (
        DataWidth => 32,
        AddressRange => 78,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => input_address0,
        ce0 => input_ce0,
        we0 => input_we0,
        d0 => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_d0,
        q0 => input_q0,
        address1 => grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_address1,
        ce1 => input_ce1,
        q1 => input_q1);

    weights_0_U : component mlp_dance3_weights_0
    generic map (
        DataWidth => 32,
        AddressRange => 624,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_0_address0,
        ce0 => weights_0_ce0,
        we0 => weights_0_we0,
        d0 => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_d0,
        q0 => weights_0_q0,
        address1 => grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_address1,
        ce1 => weights_0_ce1,
        q1 => weights_0_q1);

    bias_0_U : component mlp_dance3_bias_0
    generic map (
        DataWidth => 32,
        AddressRange => 78,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bias_0_address0,
        ce0 => bias_0_ce0,
        we0 => bias_0_we0,
        d0 => grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_d0,
        q0 => bias_0_q0);

    grp_mlp_dance3_Pipeline_layer0_fu_405 : component mlp_dance3_mlp_dance3_Pipeline_layer0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start,
        ap_done => grp_mlp_dance3_Pipeline_layer0_fu_405_ap_done,
        ap_idle => grp_mlp_dance3_Pipeline_layer0_fu_405_ap_idle,
        ap_ready => grp_mlp_dance3_Pipeline_layer0_fu_405_ap_ready,
        buffer_0_7_0553 => buffer_0_7_0553_fu_98,
        buffer_0_6_0552 => buffer_0_6_0552_fu_94,
        buffer_0_5_0551 => buffer_0_5_0551_fu_90,
        buffer_0_4_0550 => buffer_0_4_0550_fu_86,
        buffer_0_3_0549 => buffer_0_3_0549_fu_82,
        buffer_0_2_0548 => buffer_0_2_0548_fu_78,
        buffer_0_1_0547 => buffer_0_1_0547_fu_74,
        buffer_0_0_0546 => buffer_0_0_0546_fu_70,
        input_r_address0 => grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_address0,
        input_r_ce0 => grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_ce0,
        input_r_q0 => input_q0,
        input_r_address1 => grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_address1,
        input_r_ce1 => grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_ce1,
        input_r_q1 => input_q1,
        weights_0_address0 => grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_address0,
        weights_0_ce0 => grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_ce0,
        weights_0_q0 => weights_0_q0,
        weights_0_address1 => grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_address1,
        weights_0_ce1 => grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_ce1,
        weights_0_q1 => weights_0_q1,
        bias_0_address0 => grp_mlp_dance3_Pipeline_layer0_fu_405_bias_0_address0,
        bias_0_ce0 => grp_mlp_dance3_Pipeline_layer0_fu_405_bias_0_ce0,
        bias_0_q0 => bias_0_q0,
        buffer_0_7_1_out => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_7_1_out,
        buffer_0_7_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_7_1_out_ap_vld,
        buffer_0_6_1_out => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_6_1_out,
        buffer_0_6_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_6_1_out_ap_vld,
        buffer_0_5_1_out => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_5_1_out,
        buffer_0_5_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_5_1_out_ap_vld,
        buffer_0_4_1_out => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_4_1_out,
        buffer_0_4_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_4_1_out_ap_vld,
        buffer_0_3_1_out => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_3_1_out,
        buffer_0_3_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_3_1_out_ap_vld,
        buffer_0_2_1_out => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_2_1_out,
        buffer_0_2_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_2_1_out_ap_vld,
        buffer_0_1_1_out => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_1_1_out,
        buffer_0_1_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_1_1_out_ap_vld,
        buffer_0_0_1_out => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_0_1_out,
        buffer_0_0_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_0_1_out_ap_vld,
        grp_fu_1742_p_din0 => grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_din0,
        grp_fu_1742_p_din1 => grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_din1,
        grp_fu_1742_p_opcode => grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_opcode,
        grp_fu_1742_p_dout0 => grp_fu_1742_p2,
        grp_fu_1742_p_ce => grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_ce,
        grp_fu_554_p_din0 => grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_din0,
        grp_fu_554_p_din1 => grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_din1,
        grp_fu_554_p_opcode => grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_opcode,
        grp_fu_554_p_dout0 => grp_fu_554_p2,
        grp_fu_554_p_ce => grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_ce);

    grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428 : component mlp_dance3_mlp_dance3_Pipeline_retrieve_inputs
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start,
        ap_done => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_done,
        ap_idle => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_idle,
        ap_ready => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_ready,
        S_AXIS_V_TVALID => S_AXIS_V_TVALID_int_regslice,
        S_AXIS_V_TDATA => S_AXIS_V_TDATA_int_regslice,
        S_AXIS_V_TREADY => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_S_AXIS_V_TREADY,
        input_r_address0 => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_address0,
        input_r_ce0 => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_ce0,
        input_r_we0 => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_we0,
        input_r_d0 => grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_d0);

    grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435 : component mlp_dance3_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start,
        ap_done => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_done,
        ap_idle => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_idle,
        ap_ready => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_ready,
        S_AXIS_V_TVALID => S_AXIS_V_TVALID_int_regslice,
        weights_0_address0 => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_address0,
        weights_0_ce0 => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_ce0,
        weights_0_we0 => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_we0,
        weights_0_d0 => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_d0,
        S_AXIS_V_TDATA => S_AXIS_V_TDATA_int_regslice,
        S_AXIS_V_TREADY => grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_S_AXIS_V_TREADY);

    grp_mlp_dance3_Pipeline_layer1_fu_442 : component mlp_dance3_mlp_dance3_Pipeline_layer1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start,
        ap_done => grp_mlp_dance3_Pipeline_layer1_fu_442_ap_done,
        ap_idle => grp_mlp_dance3_Pipeline_layer1_fu_442_ap_idle,
        ap_ready => grp_mlp_dance3_Pipeline_layer1_fu_442_ap_ready,
        buffer_1_2_027 => buffer_1_2_027_fu_110,
        buffer_1_1_026 => buffer_1_1_026_fu_106,
        buffer_1_0_025 => buffer_1_0_025_fu_102,
        weights_1_0_0_01 => reg_679,
        weights_1_0_1_02 => reg_685,
        weights_1_0_2_03 => reg_691,
        weights_1_1_0_04 => reg_697,
        weights_1_1_1_05 => reg_703,
        weights_1_1_2_06 => reg_709,
        weights_1_2_0_07 => reg_715,
        weights_1_2_1_08 => reg_721,
        weights_1_2_2_09 => reg_727,
        weights_1_3_0_010 => reg_733,
        weights_1_3_1_011 => reg_739,
        weights_1_3_2_012 => reg_745,
        weights_1_4_0_013 => reg_751,
        weights_1_4_1_014 => reg_757,
        weights_1_4_2_015 => reg_763,
        weights_1_5_0_016 => reg_769,
        weights_1_5_1_017 => reg_775,
        weights_1_5_2_018 => reg_781,
        weights_1_6_0_019 => reg_787,
        weights_1_6_1_020 => reg_793,
        weights_1_6_2_021 => reg_799,
        weights_1_7_0_022 => reg_805,
        weights_1_7_1_023 => reg_811,
        weights_1_7_2_024 => reg_817,
        buffer_0_0_1_reload => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_0_1_out,
        buffer_0_1_1_reload => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_1_1_out,
        buffer_0_2_1_reload => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_2_1_out,
        buffer_0_3_1_reload => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_3_1_out,
        buffer_0_4_1_reload => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_4_1_out,
        buffer_0_5_1_reload => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_5_1_out,
        buffer_0_6_1_reload => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_6_1_out,
        buffer_0_7_1_reload => grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_7_1_out,
        buffer_1_2_1_out => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_2_1_out,
        buffer_1_2_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_2_1_out_ap_vld,
        buffer_1_1_1_out => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_1_1_out,
        buffer_1_1_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_1_1_out_ap_vld,
        buffer_1_0_1_out => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_0_1_out,
        buffer_1_0_1_out_ap_vld => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_0_1_out_ap_vld,
        grp_fu_1742_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_din0,
        grp_fu_1742_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_din1,
        grp_fu_1742_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_opcode,
        grp_fu_1742_p_dout0 => grp_fu_1742_p2,
        grp_fu_1742_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_ce,
        grp_fu_1746_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_din0,
        grp_fu_1746_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_din1,
        grp_fu_1746_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_opcode,
        grp_fu_1746_p_dout0 => grp_fu_1746_p2,
        grp_fu_1746_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_ce,
        grp_fu_1750_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_din0,
        grp_fu_1750_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_din1,
        grp_fu_1750_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_opcode,
        grp_fu_1750_p_dout0 => grp_fu_1750_p2,
        grp_fu_1750_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_ce,
        grp_fu_1754_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_din0,
        grp_fu_1754_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_din1,
        grp_fu_1754_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_opcode,
        grp_fu_1754_p_dout0 => grp_fu_1754_p2,
        grp_fu_1754_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_ce,
        grp_fu_1758_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_din0,
        grp_fu_1758_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_din1,
        grp_fu_1758_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_opcode,
        grp_fu_1758_p_dout0 => grp_fu_1758_p2,
        grp_fu_1758_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_ce,
        grp_fu_1762_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_din0,
        grp_fu_1762_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_din1,
        grp_fu_1762_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_opcode,
        grp_fu_1762_p_dout0 => grp_fu_1762_p2,
        grp_fu_1762_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_ce,
        grp_fu_1766_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_din0,
        grp_fu_1766_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_din1,
        grp_fu_1766_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_opcode,
        grp_fu_1766_p_dout0 => grp_fu_1766_p2,
        grp_fu_1766_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_ce,
        grp_fu_1770_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_din0,
        grp_fu_1770_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_din1,
        grp_fu_1770_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_opcode,
        grp_fu_1770_p_dout0 => grp_fu_1770_p2,
        grp_fu_1770_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_ce,
        grp_fu_1774_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_din0,
        grp_fu_1774_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_din1,
        grp_fu_1774_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_opcode,
        grp_fu_1774_p_dout0 => grp_fu_1774_p2,
        grp_fu_1774_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_ce,
        grp_fu_554_p_din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_din0,
        grp_fu_554_p_din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_din1,
        grp_fu_554_p_opcode => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_opcode,
        grp_fu_554_p_dout0 => grp_fu_554_p2,
        grp_fu_554_p_ce => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_ce);

    grp_mlp_dance3_Pipeline_output_fu_484 : component mlp_dance3_mlp_dance3_Pipeline_output
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mlp_dance3_Pipeline_output_fu_484_ap_start,
        ap_done => grp_mlp_dance3_Pipeline_output_fu_484_ap_done,
        ap_idle => grp_mlp_dance3_Pipeline_output_fu_484_ap_idle,
        ap_ready => grp_mlp_dance3_Pipeline_output_fu_484_ap_ready,
        M_AXIS_V_TREADY => grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TREADY,
        buffer_1_0_1_reload => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_0_1_out,
        buffer_1_1_1_reload => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_1_1_out,
        buffer_1_2_1_reload => grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_2_1_out,
        M_AXIS_V_TDATA => grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TDATA,
        M_AXIS_V_TVALID => grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TVALID);

    grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493 : component mlp_dance3_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start,
        ap_done => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_done,
        ap_idle => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_idle,
        ap_ready => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_ready,
        S_AXIS_V_TVALID => S_AXIS_V_TVALID_int_regslice,
        weights_1_7_2_024 => reg_817,
        weights_1_7_1_023 => reg_811,
        weights_1_7_0_022 => reg_805,
        weights_1_6_2_021 => reg_799,
        weights_1_6_1_020 => reg_793,
        weights_1_6_0_019 => reg_787,
        weights_1_5_2_018 => reg_781,
        weights_1_5_1_017 => reg_775,
        weights_1_5_0_016 => reg_769,
        weights_1_4_2_015 => reg_763,
        weights_1_4_1_014 => reg_757,
        weights_1_4_0_013 => reg_751,
        weights_1_3_2_012 => reg_745,
        weights_1_3_1_011 => reg_739,
        weights_1_3_0_010 => reg_733,
        weights_1_2_2_09 => reg_727,
        weights_1_2_1_08 => reg_721,
        weights_1_2_0_07 => reg_715,
        weights_1_1_2_06 => reg_709,
        weights_1_1_1_05 => reg_703,
        weights_1_1_0_04 => reg_697,
        weights_1_0_2_03 => reg_691,
        weights_1_0_1_02 => reg_685,
        weights_1_0_0_01 => reg_679,
        S_AXIS_V_TDATA => S_AXIS_V_TDATA_int_regslice,
        S_AXIS_V_TREADY => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_S_AXIS_V_TREADY,
        weights_1_7_2_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_2_2_out,
        weights_1_7_2_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_2_2_out_ap_vld,
        weights_1_7_1_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_1_2_out,
        weights_1_7_1_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_1_2_out_ap_vld,
        weights_1_7_0_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_0_2_out,
        weights_1_7_0_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_0_2_out_ap_vld,
        weights_1_6_2_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_2_2_out,
        weights_1_6_2_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_2_2_out_ap_vld,
        weights_1_6_1_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_1_2_out,
        weights_1_6_1_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_1_2_out_ap_vld,
        weights_1_6_0_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_0_2_out,
        weights_1_6_0_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_0_2_out_ap_vld,
        weights_1_5_2_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_2_2_out,
        weights_1_5_2_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_2_2_out_ap_vld,
        weights_1_5_1_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_1_2_out,
        weights_1_5_1_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_1_2_out_ap_vld,
        weights_1_5_0_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_0_2_out,
        weights_1_5_0_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_0_2_out_ap_vld,
        weights_1_4_2_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_2_2_out,
        weights_1_4_2_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_2_2_out_ap_vld,
        weights_1_4_1_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_1_2_out,
        weights_1_4_1_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_1_2_out_ap_vld,
        weights_1_4_0_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_0_2_out,
        weights_1_4_0_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_0_2_out_ap_vld,
        weights_1_3_2_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_2_2_out,
        weights_1_3_2_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_2_2_out_ap_vld,
        weights_1_3_1_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_1_2_out,
        weights_1_3_1_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_1_2_out_ap_vld,
        weights_1_3_0_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_0_2_out,
        weights_1_3_0_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_0_2_out_ap_vld,
        weights_1_2_2_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_2_2_out,
        weights_1_2_2_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_2_2_out_ap_vld,
        weights_1_2_1_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_1_2_out,
        weights_1_2_1_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_1_2_out_ap_vld,
        weights_1_2_0_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_0_2_out,
        weights_1_2_0_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_0_2_out_ap_vld,
        weights_1_1_2_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_2_2_out,
        weights_1_1_2_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_2_2_out_ap_vld,
        weights_1_1_1_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_1_2_out,
        weights_1_1_1_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_1_2_out_ap_vld,
        weights_1_1_0_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_0_2_out,
        weights_1_1_0_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_0_2_out_ap_vld,
        weights_1_0_2_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_2_2_out,
        weights_1_0_2_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_2_2_out_ap_vld,
        weights_1_0_1_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_1_2_out,
        weights_1_0_1_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_1_2_out_ap_vld,
        weights_1_0_0_2_out => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_0_2_out,
        weights_1_0_0_2_out_ap_vld => grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_0_2_out_ap_vld);

    grp_mlp_dance3_Pipeline_loadbias0_fu_547 : component mlp_dance3_mlp_dance3_Pipeline_loadbias0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start,
        ap_done => grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_done,
        ap_idle => grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_idle,
        ap_ready => grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_ready,
        S_AXIS_V_TVALID => S_AXIS_V_TVALID_int_regslice,
        S_AXIS_V_TDATA => S_AXIS_V_TDATA_int_regslice,
        S_AXIS_V_TREADY => grp_mlp_dance3_Pipeline_loadbias0_fu_547_S_AXIS_V_TREADY,
        bias_0_address0 => grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_address0,
        bias_0_ce0 => grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_ce0,
        bias_0_we0 => grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_we0,
        bias_0_d0 => grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_d0);

    fcmp_32ns_32ns_1_2_no_dsp_1_U162 : component mlp_dance3_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_554_p0,
        din1 => grp_fu_554_p1,
        ce => grp_fu_554_ce,
        opcode => grp_fu_554_opcode,
        dout => grp_fu_554_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U163 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1742_p0,
        din1 => grp_fu_1742_p1,
        ce => grp_fu_1742_ce,
        dout => grp_fu_1742_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U164 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_din0,
        din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_din1,
        ce => grp_fu_1746_ce,
        dout => grp_fu_1746_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U165 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_din0,
        din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_din1,
        ce => grp_fu_1750_ce,
        dout => grp_fu_1750_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U166 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_din0,
        din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_din1,
        ce => grp_fu_1754_ce,
        dout => grp_fu_1754_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U167 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_din0,
        din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_din1,
        ce => grp_fu_1758_ce,
        dout => grp_fu_1758_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U168 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_din0,
        din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_din1,
        ce => grp_fu_1762_ce,
        dout => grp_fu_1762_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U169 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_din0,
        din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_din1,
        ce => grp_fu_1766_ce,
        dout => grp_fu_1766_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U170 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_din0,
        din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_din1,
        ce => grp_fu_1770_ce,
        dout => grp_fu_1770_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U171 : component mlp_dance3_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_din0,
        din1 => grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_din1,
        ce => grp_fu_1774_ce,
        dout => grp_fu_1774_p2);

    regslice_both_S_AXIS_V_U : component mlp_dance3_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => S_AXIS_V_TDATA,
        vld_in => S_AXIS_V_TVALID,
        ack_in => regslice_both_S_AXIS_V_U_ack_in,
        data_out => S_AXIS_V_TDATA_int_regslice,
        vld_out => S_AXIS_V_TVALID_int_regslice,
        ack_out => S_AXIS_V_TREADY_int_regslice,
        apdone_blk => regslice_both_S_AXIS_V_U_apdone_blk);

    regslice_both_M_AXIS_V_U : component mlp_dance3_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TDATA,
        vld_in => grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TVALID,
        ack_in => M_AXIS_V_TREADY_int_regslice,
        data_out => M_AXIS_V_TDATA,
        vld_out => regslice_both_M_AXIS_V_U_vld_out,
        ack_out => M_AXIS_V_TREADY,
        apdone_blk => regslice_both_M_AXIS_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (staged_3_load_fu_828_p1 = ap_const_lv32_4))) then 
                    grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mlp_dance3_Pipeline_layer0_fu_405_ap_ready = ap_const_logic_1)) then 
                    grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mlp_dance3_Pipeline_layer1_fu_442_ap_ready = ap_const_logic_1)) then 
                    grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_ready = ap_const_logic_1)) then 
                    grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (staged_3_load_fu_828_p1 = ap_const_lv32_0))) then 
                    grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_ready = ap_const_logic_1)) then 
                    grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_ready = ap_const_logic_1)) then 
                    grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mlp_dance3_Pipeline_output_fu_484_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mlp_dance3_Pipeline_output_fu_484_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_mlp_dance3_Pipeline_output_fu_484_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mlp_dance3_Pipeline_output_fu_484_ap_ready = ap_const_logic_1)) then 
                    grp_mlp_dance3_Pipeline_output_fu_484_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (staged_3_load_fu_828_p1 = ap_const_lv32_3))) then 
                    grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_ready = ap_const_logic_1)) then 
                    grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    staged_1_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((staged_3_load_fu_828_p1 = ap_const_lv32_4)) and not((staged_3_load_fu_828_p1 = ap_const_lv32_3)) and not((staged_3_load_fu_828_p1 = ap_const_lv32_2)) and not((staged_3_load_fu_828_p1 = ap_const_lv32_0)) and not((staged_3_load_fu_828_p1 = ap_const_lv32_1)) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                staged_1_reg_386 <= staged_fu_210;
            elsif (((grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                staged_1_reg_386 <= ap_const_lv32_4;
            elsif (((grp_mlp_dance3_Pipeline_output_fu_484_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                staged_1_reg_386 <= ap_const_lv32_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                staged_1_reg_386 <= select_ln142_fu_1019_p3;
            end if; 
        end if;
    end process;

    staged_2_reg_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                staged_2_reg_372 <= staged_1_reg_386;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (staged_3_load_fu_828_p1 = ap_const_lv32_1))) then 
                staged_2_reg_372 <= ap_const_lv32_1;
            elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17) and (staged_3_reg_1651 = ap_const_lv32_0))) then 
                staged_2_reg_372 <= ap_const_lv32_2;
            end if; 
        end if;
    end process;

    staged_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
                staged_fu_210 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                staged_fu_210 <= ap_phi_mux_staged_2_phi_fu_376_p6;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                buffer_0_0_0546_fu_70 <= grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_0_1_out;
                buffer_0_1_0547_fu_74 <= grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_1_1_out;
                buffer_0_2_0548_fu_78 <= grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_2_1_out;
                buffer_0_3_0549_fu_82 <= grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_3_1_out;
                buffer_0_4_0550_fu_86 <= grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_4_1_out;
                buffer_0_5_0551_fu_90 <= grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_5_1_out;
                buffer_0_6_0552_fu_94 <= grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_6_1_out;
                buffer_0_7_0553_fu_98 <= grp_mlp_dance3_Pipeline_layer0_fu_405_buffer_0_7_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                buffer_1_0_025_fu_102 <= grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_0_1_out;
                buffer_1_1_026_fu_106 <= grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_1_1_out;
                buffer_1_2_027_fu_110 <= grp_mlp_dance3_Pipeline_layer1_fu_442_buffer_1_2_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                icmp_ln137_1_reg_1732 <= icmp_ln137_1_fu_1003_p2;
                icmp_ln137_reg_1727 <= icmp_ln137_fu_997_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_679 <= weights_1_0_0_01_fu_114;
                reg_685 <= weights_1_0_1_02_fu_118;
                reg_691 <= weights_1_0_2_03_fu_122;
                reg_697 <= weights_1_1_0_04_fu_126;
                reg_703 <= weights_1_1_1_05_fu_130;
                reg_709 <= weights_1_1_2_06_fu_134;
                reg_715 <= weights_1_2_0_07_fu_138;
                reg_721 <= weights_1_2_1_08_fu_142;
                reg_727 <= weights_1_2_2_09_fu_146;
                reg_733 <= weights_1_3_0_010_fu_150;
                reg_739 <= weights_1_3_1_011_fu_154;
                reg_745 <= weights_1_3_2_012_fu_158;
                reg_751 <= weights_1_4_0_013_fu_162;
                reg_757 <= weights_1_4_1_014_fu_166;
                reg_763 <= weights_1_4_2_015_fu_170;
                reg_769 <= weights_1_5_0_016_fu_174;
                reg_775 <= weights_1_5_1_017_fu_178;
                reg_781 <= weights_1_5_2_018_fu_182;
                reg_787 <= weights_1_6_0_019_fu_186;
                reg_793 <= weights_1_6_1_020_fu_190;
                reg_799 <= weights_1_6_2_021_fu_194;
                reg_805 <= weights_1_7_0_022_fu_198;
                reg_811 <= weights_1_7_1_023_fu_202;
                reg_817 <= weights_1_7_2_024_fu_206;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                staged_3_reg_1651 <= staged_fu_210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17) and (staged_3_reg_1651 = ap_const_lv32_0))) then
                weights_1_0_0_01_fu_114 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_0_2_out;
                weights_1_0_1_02_fu_118 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_1_2_out;
                weights_1_0_2_03_fu_122 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_0_2_2_out;
                weights_1_1_0_04_fu_126 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_0_2_out;
                weights_1_1_1_05_fu_130 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_1_2_out;
                weights_1_1_2_06_fu_134 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_1_2_2_out;
                weights_1_2_0_07_fu_138 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_0_2_out;
                weights_1_2_1_08_fu_142 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_1_2_out;
                weights_1_2_2_09_fu_146 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_2_2_2_out;
                weights_1_3_0_010_fu_150 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_0_2_out;
                weights_1_3_1_011_fu_154 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_1_2_out;
                weights_1_3_2_012_fu_158 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_3_2_2_out;
                weights_1_4_0_013_fu_162 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_0_2_out;
                weights_1_4_1_014_fu_166 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_1_2_out;
                weights_1_4_2_015_fu_170 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_4_2_2_out;
                weights_1_5_0_016_fu_174 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_0_2_out;
                weights_1_5_1_017_fu_178 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_1_2_out;
                weights_1_5_2_018_fu_182 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_5_2_2_out;
                weights_1_6_0_019_fu_186 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_0_2_out;
                weights_1_6_1_020_fu_190 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_1_2_out;
                weights_1_6_2_021_fu_194 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_6_2_2_out;
                weights_1_7_0_022_fu_198 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_0_2_out;
                weights_1_7_1_023_fu_202 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_1_2_out;
                weights_1_7_2_024_fu_206 <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_weights_1_7_2_2_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state9, staged_3_load_fu_828_p1, ap_CS_fsm_state2, grp_mlp_dance3_Pipeline_layer0_fu_405_ap_done, grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_done, grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_done, grp_mlp_dance3_Pipeline_layer1_fu_442_ap_done, grp_mlp_dance3_Pipeline_output_fu_484_ap_done, grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_done, ap_CS_fsm_state17, ap_block_state17_on_subcall_done, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state14, S_AXIS_V_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                if ((not((staged_3_load_fu_828_p1 = ap_const_lv32_4)) and not((staged_3_load_fu_828_p1 = ap_const_lv32_3)) and not((staged_3_load_fu_828_p1 = ap_const_lv32_2)) and not((staged_3_load_fu_828_p1 = ap_const_lv32_0)) and not((staged_3_load_fu_828_p1 = ap_const_lv32_1)) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (staged_3_load_fu_828_p1 = ap_const_lv32_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (staged_3_load_fu_828_p1 = ap_const_lv32_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (staged_3_load_fu_828_p1 = ap_const_lv32_2))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (staged_3_load_fu_828_p1 = ap_const_lv32_3))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_mlp_dance3_Pipeline_layer0_fu_405_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_mlp_dance3_Pipeline_layer1_fu_442_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_mlp_dance3_Pipeline_output_fu_484_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = S_AXIS_V_TVALID_int_regslice))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state11 => 
                if (((grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    M_AXIS_V_TVALID <= regslice_both_M_AXIS_V_U_vld_out;

    S_AXIS_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state9, S_AXIS_V_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            S_AXIS_V_TDATA_blk_n <= S_AXIS_V_TVALID_int_regslice;
        else 
            S_AXIS_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    S_AXIS_V_TREADY <= regslice_both_S_AXIS_V_U_ack_in;

    S_AXIS_V_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state9, staged_3_reg_1651, grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_S_AXIS_V_TREADY, grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_S_AXIS_V_TREADY, grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_S_AXIS_V_TREADY, grp_mlp_dance3_Pipeline_loadbias0_fu_547_S_AXIS_V_TREADY, ap_CS_fsm_state17, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state14, S_AXIS_V_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = S_AXIS_V_TVALID_int_regslice))) then 
            S_AXIS_V_TREADY_int_regslice <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (staged_3_reg_1651 = ap_const_lv32_0))) then 
            S_AXIS_V_TREADY_int_regslice <= grp_mlp_dance3_Pipeline_loadbias0_fu_547_S_AXIS_V_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            S_AXIS_V_TREADY_int_regslice <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_S_AXIS_V_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            S_AXIS_V_TREADY_int_regslice <= grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_S_AXIS_V_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            S_AXIS_V_TREADY_int_regslice <= grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_S_AXIS_V_TREADY;
        else 
            S_AXIS_V_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    and_ln137_fu_1013_p2 <= (or_ln137_fu_1009_p2 and grp_fu_554_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_done)
    begin
        if ((grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_done)
    begin
        if ((grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(ap_block_state17_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state17_on_subcall_done)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state1_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_mlp_dance3_Pipeline_layer0_fu_405_ap_done)
    begin
        if ((grp_mlp_dance3_Pipeline_layer0_fu_405_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_mlp_dance3_Pipeline_layer1_fu_442_ap_done)
    begin
        if ((grp_mlp_dance3_Pipeline_layer1_fu_442_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_mlp_dance3_Pipeline_output_fu_484_ap_done)
    begin
        if ((grp_mlp_dance3_Pipeline_output_fu_484_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state8_blk_assign_proc : process(grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_done)
    begin
        if ((grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state9_blk_assign_proc : process(S_AXIS_V_TVALID_int_regslice)
    begin
        if ((ap_const_logic_0 = S_AXIS_V_TVALID_int_regslice)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(staged_3_reg_1651, grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_done = ap_const_logic_0) and (staged_3_reg_1651 = ap_const_lv32_0));
    end process;


    ap_phi_mux_staged_2_phi_fu_376_p6_assign_proc : process(staged_3_reg_1651, staged_2_reg_372, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (staged_3_reg_1651 = ap_const_lv32_0))) then 
            ap_phi_mux_staged_2_phi_fu_376_p6 <= ap_const_lv32_2;
        else 
            ap_phi_mux_staged_2_phi_fu_376_p6 <= staged_2_reg_372;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    bias_0_address0_assign_proc : process(staged_3_reg_1651, grp_mlp_dance3_Pipeline_layer0_fu_405_bias_0_address0, grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_address0, ap_CS_fsm_state17, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (staged_3_reg_1651 = ap_const_lv32_0))) then 
            bias_0_address0 <= grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            bias_0_address0 <= grp_mlp_dance3_Pipeline_layer0_fu_405_bias_0_address0;
        else 
            bias_0_address0 <= "XXXXXXX";
        end if; 
    end process;


    bias_0_ce0_assign_proc : process(staged_3_reg_1651, grp_mlp_dance3_Pipeline_layer0_fu_405_bias_0_ce0, grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_ce0, ap_CS_fsm_state17, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (staged_3_reg_1651 = ap_const_lv32_0))) then 
            bias_0_ce0 <= grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            bias_0_ce0 <= grp_mlp_dance3_Pipeline_layer0_fu_405_bias_0_ce0;
        else 
            bias_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_0_we0_assign_proc : process(staged_3_reg_1651, grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_we0, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (staged_3_reg_1651 = ap_const_lv32_0))) then 
            bias_0_we0 <= grp_mlp_dance3_Pipeline_loadbias0_fu_547_bias_0_we0;
        else 
            bias_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1742_ce_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_ce, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1742_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_1742_ce <= grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_ce;
        else 
            grp_fu_1742_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1742_p0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_din0, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1742_p0 <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_1742_p0 <= grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_din0;
        else 
            grp_fu_1742_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1742_p1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state2, grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_din1, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1742_p1 <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1742_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_1742_p1 <= grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_1742_p_din1;
        else 
            grp_fu_1742_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1746_ce_assign_proc : process(ap_CS_fsm_state4, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_ce, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1746_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1746_p_ce;
        else 
            grp_fu_1746_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1750_ce_assign_proc : process(ap_CS_fsm_state4, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_ce, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1750_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1750_p_ce;
        else 
            grp_fu_1750_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1754_ce_assign_proc : process(ap_CS_fsm_state4, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_ce, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1754_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1754_p_ce;
        else 
            grp_fu_1754_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1758_ce_assign_proc : process(ap_CS_fsm_state4, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_ce, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1758_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1758_p_ce;
        else 
            grp_fu_1758_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1762_ce_assign_proc : process(ap_CS_fsm_state4, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_ce, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1762_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1762_p_ce;
        else 
            grp_fu_1762_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1766_ce_assign_proc : process(ap_CS_fsm_state4, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_ce, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1766_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1766_p_ce;
        else 
            grp_fu_1766_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1770_ce_assign_proc : process(ap_CS_fsm_state4, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_ce, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1770_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1770_p_ce;
        else 
            grp_fu_1770_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1774_ce_assign_proc : process(ap_CS_fsm_state4, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_ce, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_1774_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_1774_p_ce;
        else 
            grp_fu_1774_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_554_ce_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state10, grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_ce, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_ce, ap_CS_fsm_state3, ap_CS_fsm_state5, S_AXIS_V_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_554_ce <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_554_ce <= grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = S_AXIS_V_TVALID_int_regslice)))) then 
            grp_fu_554_ce <= ap_const_logic_1;
        else 
            grp_fu_554_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_554_opcode_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state2, grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_opcode, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_opcode, ap_CS_fsm_state3, ap_CS_fsm_state5, S_AXIS_V_TVALID_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_554_opcode <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_554_opcode <= grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_logic_1 = S_AXIS_V_TVALID_int_regslice))) then 
            grp_fu_554_opcode <= ap_const_lv5_1;
        else 
            grp_fu_554_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_554_p0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state2, in_data_fu_978_p1, grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_din0, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_din0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_554_p0 <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_554_p0 <= grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_554_p0 <= in_data_fu_978_p1;
        else 
            grp_fu_554_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_554_p1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state4, ap_CS_fsm_state2, grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_din1, grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_din1, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            grp_fu_554_p1 <= grp_mlp_dance3_Pipeline_layer1_fu_442_grp_fu_554_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_554_p1 <= grp_mlp_dance3_Pipeline_layer0_fu_405_grp_fu_554_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_554_p1 <= ap_const_lv32_0;
        else 
            grp_fu_554_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start <= grp_mlp_dance3_Pipeline_layer0_fu_405_ap_start_reg;
    grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start <= grp_mlp_dance3_Pipeline_layer1_fu_442_ap_start_reg;
    grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start <= grp_mlp_dance3_Pipeline_loadbias0_fu_547_ap_start_reg;
    grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start <= grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_ap_start_reg;
    grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start <= grp_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3_fu_493_ap_start_reg;
    grp_mlp_dance3_Pipeline_output_fu_484_M_AXIS_V_TREADY <= (ap_CS_fsm_state7 and M_AXIS_V_TREADY_int_regslice);
    grp_mlp_dance3_Pipeline_output_fu_484_ap_start <= grp_mlp_dance3_Pipeline_output_fu_484_ap_start_reg;
    grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start <= grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_ap_start_reg;
    icmp_ln137_1_fu_1003_p2 <= "1" when (trunc_ln137_fu_993_p1 = ap_const_lv23_0) else "0";
    icmp_ln137_fu_997_p2 <= "0" when (tmp_fu_983_p4 = ap_const_lv8_FF) else "1";
    in_data_fu_978_p1 <= trunc_ln145_fu_974_p1;

    input_address0_assign_proc : process(grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_address0, grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_address0, ap_CS_fsm_state8, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            input_address0 <= grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_address0 <= grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_address0;
        else 
            input_address0 <= "XXXXXXX";
        end if; 
    end process;


    input_ce0_assign_proc : process(grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_ce0, grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_ce0, ap_CS_fsm_state8, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            input_ce0 <= grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_ce0 <= grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_ce0;
        else 
            input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_ce1_assign_proc : process(grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_ce1, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_ce1 <= grp_mlp_dance3_Pipeline_layer0_fu_405_input_r_ce1;
        else 
            input_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_we0_assign_proc : process(grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            input_we0 <= grp_mlp_dance3_Pipeline_retrieve_inputs_fu_428_input_r_we0;
        else 
            input_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln137_fu_1009_p2 <= (icmp_ln137_reg_1727 or icmp_ln137_1_reg_1732);
    select_ln142_fu_1019_p3 <= 
        ap_const_lv32_3 when (and_ln137_fu_1013_p2(0) = '1') else 
        ap_const_lv32_5;
    staged_3_load_fu_828_p1 <= staged_fu_210;
    tmp_fu_983_p4 <= S_AXIS_V_TDATA_int_regslice(30 downto 23);
    trunc_ln137_fu_993_p1 <= S_AXIS_V_TDATA_int_regslice(23 - 1 downto 0);
    trunc_ln145_fu_974_p1 <= S_AXIS_V_TDATA_int_regslice(32 - 1 downto 0);

    weights_0_address0_assign_proc : process(grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_address0, grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_address0, ap_CS_fsm_state3, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weights_0_address0 <= grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weights_0_address0 <= grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_address0;
        else 
            weights_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    weights_0_ce0_assign_proc : process(grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_ce0, grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_ce0, ap_CS_fsm_state3, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weights_0_ce0 <= grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weights_0_ce0 <= grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_ce0;
        else 
            weights_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_0_ce1_assign_proc : process(grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_ce1, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weights_0_ce1 <= grp_mlp_dance3_Pipeline_layer0_fu_405_weights_0_ce1;
        else 
            weights_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weights_0_we0_assign_proc : process(grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            weights_0_we0 <= grp_mlp_dance3_Pipeline_loadweights0_VITIS_LOOP_46_2_fu_435_weights_0_we0;
        else 
            weights_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
