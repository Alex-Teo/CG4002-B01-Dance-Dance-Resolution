// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mlp_dance3_mlp_dance3_Pipeline_layer2_pos (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buffer_1_address0,
        buffer_1_ce0,
        buffer_1_q0,
        buffer_1_address1,
        buffer_1_ce1,
        buffer_1_q1,
        weights_2_pos_address0,
        weights_2_pos_ce0,
        weights_2_pos_q0,
        weights_2_pos_address1,
        weights_2_pos_ce1,
        weights_2_pos_q1,
        bias_2_pos_address0,
        bias_2_pos_ce0,
        bias_2_pos_q0,
        buffer_2_address0,
        buffer_2_ce0,
        buffer_2_we0,
        buffer_2_d0,
        grp_fu_705_p_din0,
        grp_fu_705_p_din1,
        grp_fu_705_p_opcode,
        grp_fu_705_p_dout0,
        grp_fu_705_p_ce,
        grp_fu_479_p_din0,
        grp_fu_479_p_din1,
        grp_fu_479_p_opcode,
        grp_fu_479_p_dout0,
        grp_fu_479_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] buffer_1_address0;
output   buffer_1_ce0;
input  [31:0] buffer_1_q0;
output  [6:0] buffer_1_address1;
output   buffer_1_ce1;
input  [31:0] buffer_1_q1;
output  [9:0] weights_2_pos_address0;
output   weights_2_pos_ce0;
input  [31:0] weights_2_pos_q0;
output  [9:0] weights_2_pos_address1;
output   weights_2_pos_ce1;
input  [31:0] weights_2_pos_q1;
output  [4:0] bias_2_pos_address0;
output   bias_2_pos_ce0;
input  [31:0] bias_2_pos_q0;
output  [6:0] buffer_2_address0;
output   buffer_2_ce0;
output   buffer_2_we0;
output  [31:0] buffer_2_d0;
output  [31:0] grp_fu_705_p_din0;
output  [31:0] grp_fu_705_p_din1;
output  [1:0] grp_fu_705_p_opcode;
input  [31:0] grp_fu_705_p_dout0;
output   grp_fu_705_p_ce;
output  [31:0] grp_fu_479_p_din0;
output  [31:0] grp_fu_479_p_din1;
output  [4:0] grp_fu_479_p_opcode;
input  [0:0] grp_fu_479_p_dout0;
output   grp_fu_479_p_ce;

reg ap_idle;
reg bias_2_pos_ce0;
reg buffer_2_ce0;
reg buffer_2_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state32_pp0_stage15_iter1;
wire    ap_block_state48_pp0_stage15_iter2;
wire    ap_block_state64_pp0_stage15_iter3;
wire    ap_block_state80_pp0_stage15_iter4;
wire    ap_block_state96_pp0_stage15_iter5;
wire    ap_block_state112_pp0_stage15_iter6;
wire    ap_block_state128_pp0_stage15_iter7;
wire    ap_block_state144_pp0_stage15_iter8;
wire    ap_block_state160_pp0_stage15_iter9;
wire    ap_block_pp0_stage15_subdone;
reg   [0:0] icmp_ln201_reg_191;
reg    ap_condition_exit_pp0_iter0_stage15;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [5:0] i_reg_185;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_state33_pp0_stage0_iter2;
wire    ap_block_state49_pp0_stage0_iter3;
wire    ap_block_state65_pp0_stage0_iter4;
wire    ap_block_state81_pp0_stage0_iter5;
wire    ap_block_state97_pp0_stage0_iter6;
wire    ap_block_state113_pp0_stage0_iter7;
wire    ap_block_state129_pp0_stage0_iter8;
wire    ap_block_state145_pp0_stage0_iter9;
wire    ap_block_state161_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [5:0] i_reg_185_pp0_iter1_reg;
reg   [5:0] i_reg_185_pp0_iter2_reg;
reg   [5:0] i_reg_185_pp0_iter3_reg;
reg   [5:0] i_reg_185_pp0_iter4_reg;
reg   [5:0] i_reg_185_pp0_iter5_reg;
reg   [5:0] i_reg_185_pp0_iter6_reg;
reg   [5:0] i_reg_185_pp0_iter7_reg;
reg   [5:0] i_reg_185_pp0_iter8_reg;
reg   [5:0] i_reg_185_pp0_iter9_reg;
wire   [0:0] icmp_ln201_fu_104_p2;
reg   [0:0] icmp_ln201_reg_191_pp0_iter1_reg;
reg   [0:0] icmp_ln201_reg_191_pp0_iter2_reg;
reg   [0:0] icmp_ln201_reg_191_pp0_iter3_reg;
reg   [0:0] icmp_ln201_reg_191_pp0_iter4_reg;
reg   [0:0] icmp_ln201_reg_191_pp0_iter5_reg;
reg   [0:0] icmp_ln201_reg_191_pp0_iter6_reg;
reg   [0:0] icmp_ln201_reg_191_pp0_iter7_reg;
reg   [0:0] icmp_ln201_reg_191_pp0_iter8_reg;
reg   [0:0] icmp_ln201_reg_191_pp0_iter9_reg;
wire   [63:0] zext_ln201_fu_125_p1;
reg   [63:0] zext_ln201_reg_195;
reg   [31:0] bias_2_pos_load_reg_205;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_state34_pp0_stage1_iter2;
wire    ap_block_state50_pp0_stage1_iter3;
wire    ap_block_state66_pp0_stage1_iter4;
wire    ap_block_state82_pp0_stage1_iter5;
wire    ap_block_state98_pp0_stage1_iter6;
wire    ap_block_state114_pp0_stage1_iter7;
wire    ap_block_state130_pp0_stage1_iter8;
wire    ap_block_state146_pp0_stage1_iter9;
wire    ap_block_state162_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] grp_calculate_fu_78_ap_return;
reg   [31:0] val_reg_210;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state22_pp0_stage5_iter1;
wire    ap_block_state38_pp0_stage5_iter2;
wire    ap_block_state54_pp0_stage5_iter3;
wire    ap_block_state70_pp0_stage5_iter4;
wire    ap_block_state86_pp0_stage5_iter5;
wire    ap_block_state102_pp0_stage5_iter6;
wire    ap_block_state118_pp0_stage5_iter7;
wire    ap_block_state134_pp0_stage5_iter8;
wire    ap_block_state150_pp0_stage5_iter9;
wire    ap_block_state166_pp0_stage5_iter10;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] a_assign_5_reg_215;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state27_pp0_stage10_iter1;
wire    ap_block_state43_pp0_stage10_iter2;
wire    ap_block_state59_pp0_stage10_iter3;
wire    ap_block_state75_pp0_stage10_iter4;
wire    ap_block_state91_pp0_stage10_iter5;
wire    ap_block_state107_pp0_stage10_iter6;
wire    ap_block_state123_pp0_stage10_iter7;
wire    ap_block_state139_pp0_stage10_iter8;
wire    ap_block_state155_pp0_stage10_iter9;
wire    ap_block_state171_pp0_stage10_iter10;
wire    ap_block_pp0_stage10_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state29_pp0_stage12_iter1;
wire    ap_block_state45_pp0_stage12_iter2;
wire    ap_block_state61_pp0_stage12_iter3;
wire    ap_block_state77_pp0_stage12_iter4;
wire    ap_block_state93_pp0_stage12_iter5;
wire    ap_block_state109_pp0_stage12_iter6;
wire    ap_block_state125_pp0_stage12_iter7;
wire    ap_block_state141_pp0_stage12_iter8;
wire    ap_block_state157_pp0_stage12_iter9;
wire    ap_block_state173_pp0_stage12_iter10;
wire    ap_block_pp0_stage12_subdone;
wire    grp_calculate_fu_78_ap_start;
wire    grp_calculate_fu_78_ap_done;
wire    grp_calculate_fu_78_ap_idle;
wire    grp_calculate_fu_78_ap_ready;
wire   [6:0] grp_calculate_fu_78_a_address0;
wire    grp_calculate_fu_78_a_ce0;
wire   [6:0] grp_calculate_fu_78_a_address1;
wire    grp_calculate_fu_78_a_ce1;
wire   [9:0] grp_calculate_fu_78_b_address0;
wire    grp_calculate_fu_78_b_ce0;
wire   [9:0] grp_calculate_fu_78_b_address1;
wire    grp_calculate_fu_78_b_ce1;
wire   [4:0] grp_calculate_fu_78_b_offset;
reg    grp_calculate_fu_78_ap_start_reg;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage0;
reg   [5:0] i_13_fu_48;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i;
wire   [5:0] add_ln201_fu_110_p2;
wire    ap_block_pp0_stage12_11001;
wire   [31:0] bitcast_ln32_fu_129_p1;
wire   [7:0] tmp_s_fu_132_p4;
wire   [22:0] trunc_ln32_fu_142_p1;
wire   [0:0] icmp_ln32_2_fu_152_p2;
wire   [0:0] icmp_ln32_fu_146_p2;
wire   [0:0] or_ln32_fu_158_p2;
wire   [0:0] and_ln32_fu_164_p2;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state28_pp0_stage11_iter1;
wire    ap_block_state44_pp0_stage11_iter2;
wire    ap_block_state60_pp0_stage11_iter3;
wire    ap_block_state76_pp0_stage11_iter4;
wire    ap_block_state92_pp0_stage11_iter5;
wire    ap_block_state108_pp0_stage11_iter6;
wire    ap_block_state124_pp0_stage11_iter7;
wire    ap_block_state140_pp0_stage11_iter8;
wire    ap_block_state156_pp0_stage11_iter9;
wire    ap_block_state172_pp0_stage11_iter10;
wire    ap_block_pp0_stage11_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
wire    ap_block_pp0_stage15_11001;
reg    ap_condition_exit_pp0_iter9_stage12;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to10;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_state35_pp0_stage2_iter2;
wire    ap_block_state51_pp0_stage2_iter3;
wire    ap_block_state67_pp0_stage2_iter4;
wire    ap_block_state83_pp0_stage2_iter5;
wire    ap_block_state99_pp0_stage2_iter6;
wire    ap_block_state115_pp0_stage2_iter7;
wire    ap_block_state131_pp0_stage2_iter8;
wire    ap_block_state147_pp0_stage2_iter9;
wire    ap_block_state163_pp0_stage2_iter10;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state20_pp0_stage3_iter1;
wire    ap_block_state36_pp0_stage3_iter2;
wire    ap_block_state52_pp0_stage3_iter3;
wire    ap_block_state68_pp0_stage3_iter4;
wire    ap_block_state84_pp0_stage3_iter5;
wire    ap_block_state100_pp0_stage3_iter6;
wire    ap_block_state116_pp0_stage3_iter7;
wire    ap_block_state132_pp0_stage3_iter8;
wire    ap_block_state148_pp0_stage3_iter9;
wire    ap_block_state164_pp0_stage3_iter10;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state21_pp0_stage4_iter1;
wire    ap_block_state37_pp0_stage4_iter2;
wire    ap_block_state53_pp0_stage4_iter3;
wire    ap_block_state69_pp0_stage4_iter4;
wire    ap_block_state85_pp0_stage4_iter5;
wire    ap_block_state101_pp0_stage4_iter6;
wire    ap_block_state117_pp0_stage4_iter7;
wire    ap_block_state133_pp0_stage4_iter8;
wire    ap_block_state149_pp0_stage4_iter9;
wire    ap_block_state165_pp0_stage4_iter10;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state23_pp0_stage6_iter1;
wire    ap_block_state39_pp0_stage6_iter2;
wire    ap_block_state55_pp0_stage6_iter3;
wire    ap_block_state71_pp0_stage6_iter4;
wire    ap_block_state87_pp0_stage6_iter5;
wire    ap_block_state103_pp0_stage6_iter6;
wire    ap_block_state119_pp0_stage6_iter7;
wire    ap_block_state135_pp0_stage6_iter8;
wire    ap_block_state151_pp0_stage6_iter9;
wire    ap_block_state167_pp0_stage6_iter10;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state24_pp0_stage7_iter1;
wire    ap_block_state40_pp0_stage7_iter2;
wire    ap_block_state56_pp0_stage7_iter3;
wire    ap_block_state72_pp0_stage7_iter4;
wire    ap_block_state88_pp0_stage7_iter5;
wire    ap_block_state104_pp0_stage7_iter6;
wire    ap_block_state120_pp0_stage7_iter7;
wire    ap_block_state136_pp0_stage7_iter8;
wire    ap_block_state152_pp0_stage7_iter9;
wire    ap_block_state168_pp0_stage7_iter10;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state25_pp0_stage8_iter1;
wire    ap_block_state41_pp0_stage8_iter2;
wire    ap_block_state57_pp0_stage8_iter3;
wire    ap_block_state73_pp0_stage8_iter4;
wire    ap_block_state89_pp0_stage8_iter5;
wire    ap_block_state105_pp0_stage8_iter6;
wire    ap_block_state121_pp0_stage8_iter7;
wire    ap_block_state137_pp0_stage8_iter8;
wire    ap_block_state153_pp0_stage8_iter9;
wire    ap_block_state169_pp0_stage8_iter10;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state26_pp0_stage9_iter1;
wire    ap_block_state42_pp0_stage9_iter2;
wire    ap_block_state58_pp0_stage9_iter3;
wire    ap_block_state74_pp0_stage9_iter4;
wire    ap_block_state90_pp0_stage9_iter5;
wire    ap_block_state106_pp0_stage9_iter6;
wire    ap_block_state122_pp0_stage9_iter7;
wire    ap_block_state138_pp0_stage9_iter8;
wire    ap_block_state154_pp0_stage9_iter9;
wire    ap_block_state170_pp0_stage9_iter10;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state30_pp0_stage13_iter1;
wire    ap_block_state46_pp0_stage13_iter2;
wire    ap_block_state62_pp0_stage13_iter3;
wire    ap_block_state78_pp0_stage13_iter4;
wire    ap_block_state94_pp0_stage13_iter5;
wire    ap_block_state110_pp0_stage13_iter6;
wire    ap_block_state126_pp0_stage13_iter7;
wire    ap_block_state142_pp0_stage13_iter8;
wire    ap_block_state158_pp0_stage13_iter9;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state31_pp0_stage14_iter1;
wire    ap_block_state47_pp0_stage14_iter2;
wire    ap_block_state63_pp0_stage14_iter3;
wire    ap_block_state79_pp0_stage14_iter4;
wire    ap_block_state95_pp0_stage14_iter5;
wire    ap_block_state111_pp0_stage14_iter6;
wire    ap_block_state127_pp0_stage14_iter7;
wire    ap_block_state143_pp0_stage14_iter8;
wire    ap_block_state159_pp0_stage14_iter9;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage6_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_calculate_fu_78_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

mlp_dance3_calculate grp_calculate_fu_78(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_calculate_fu_78_ap_start),
    .ap_done(grp_calculate_fu_78_ap_done),
    .ap_idle(grp_calculate_fu_78_ap_idle),
    .ap_ready(grp_calculate_fu_78_ap_ready),
    .a_address0(grp_calculate_fu_78_a_address0),
    .a_ce0(grp_calculate_fu_78_a_ce0),
    .a_q0(buffer_1_q0),
    .a_address1(grp_calculate_fu_78_a_address1),
    .a_ce1(grp_calculate_fu_78_a_ce1),
    .a_q1(buffer_1_q1),
    .b_address0(grp_calculate_fu_78_b_address0),
    .b_ce0(grp_calculate_fu_78_b_ce0),
    .b_q0(weights_2_pos_q0),
    .b_address1(grp_calculate_fu_78_b_address1),
    .b_ce1(grp_calculate_fu_78_b_ce1),
    .b_q1(weights_2_pos_q1),
    .b_offset(grp_calculate_fu_78_b_offset),
    .ap_return(grp_calculate_fu_78_ap_return)
);

mlp_dance3_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage15),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage12_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage15)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage12_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_calculate_fu_78_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln201_fu_104_p2 == 1'd0))) begin
            grp_calculate_fu_78_ap_start_reg <= 1'b1;
        end else if ((grp_calculate_fu_78_ap_ready == 1'b1)) begin
            grp_calculate_fu_78_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln201_fu_104_p2 == 1'd0))) begin
            i_13_fu_48 <= add_ln201_fu_110_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_13_fu_48 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        a_assign_5_reg_215 <= grp_fu_705_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bias_2_pos_load_reg_205 <= bias_2_pos_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_185 <= ap_sig_allocacmp_i;
        i_reg_185_pp0_iter1_reg <= i_reg_185;
        i_reg_185_pp0_iter2_reg <= i_reg_185_pp0_iter1_reg;
        i_reg_185_pp0_iter3_reg <= i_reg_185_pp0_iter2_reg;
        i_reg_185_pp0_iter4_reg <= i_reg_185_pp0_iter3_reg;
        i_reg_185_pp0_iter5_reg <= i_reg_185_pp0_iter4_reg;
        i_reg_185_pp0_iter6_reg <= i_reg_185_pp0_iter5_reg;
        i_reg_185_pp0_iter7_reg <= i_reg_185_pp0_iter6_reg;
        i_reg_185_pp0_iter8_reg <= i_reg_185_pp0_iter7_reg;
        i_reg_185_pp0_iter9_reg <= i_reg_185_pp0_iter8_reg;
        icmp_ln201_reg_191 <= icmp_ln201_fu_104_p2;
        icmp_ln201_reg_191_pp0_iter1_reg <= icmp_ln201_reg_191;
        icmp_ln201_reg_191_pp0_iter2_reg <= icmp_ln201_reg_191_pp0_iter1_reg;
        icmp_ln201_reg_191_pp0_iter3_reg <= icmp_ln201_reg_191_pp0_iter2_reg;
        icmp_ln201_reg_191_pp0_iter4_reg <= icmp_ln201_reg_191_pp0_iter3_reg;
        icmp_ln201_reg_191_pp0_iter5_reg <= icmp_ln201_reg_191_pp0_iter4_reg;
        icmp_ln201_reg_191_pp0_iter6_reg <= icmp_ln201_reg_191_pp0_iter5_reg;
        icmp_ln201_reg_191_pp0_iter7_reg <= icmp_ln201_reg_191_pp0_iter6_reg;
        icmp_ln201_reg_191_pp0_iter8_reg <= icmp_ln201_reg_191_pp0_iter7_reg;
        icmp_ln201_reg_191_pp0_iter9_reg <= icmp_ln201_reg_191_pp0_iter8_reg;
        zext_ln201_reg_195[5 : 0] <= zext_ln201_fu_125_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        val_reg_210 <= grp_calculate_fu_78_ap_return;
    end
end

always @ (*) begin
    if (((icmp_ln201_reg_191 == 1'd1) & (1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln201_reg_191_pp0_iter9_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter9_stage12 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 6'd0;
    end else begin
        ap_sig_allocacmp_i = i_13_fu_48;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_2_pos_ce0 = 1'b1;
    end else begin
        bias_2_pos_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        buffer_2_ce0 = 1'b1;
    end else begin
        buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        buffer_2_we0 = 1'b1;
    end else begin
        buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage12))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln201_fu_110_p2 = (ap_sig_allocacmp_i + 6'd1);

assign and_ln32_fu_164_p2 = (or_ln32_fu_158_p2 & grp_fu_479_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage8_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage9_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage10_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage11_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage12_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage13_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage14_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage15_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage8_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage9_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage10_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage11_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage12_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage13_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage14_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage15_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage8_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage9_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage10_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp0_stage11_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage12_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage13_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage14_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage15_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp0_stage7_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp0_stage8_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp0_stage9_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp0_stage10_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp0_stage11_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp0_stage12_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp0_stage13_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp0_stage14_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state160_pp0_stage15_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp0_stage5_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp0_stage6_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state168_pp0_stage7_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp0_stage8_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state170_pp0_stage9_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp0_stage10_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp0_stage11_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state173_pp0_stage12_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage13_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage14_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage15_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage8_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage9_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage10_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage11_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage12_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage13_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage14_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage15_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage15;

assign bias_2_pos_address0 = zext_ln201_fu_125_p1;

assign bitcast_ln32_fu_129_p1 = a_assign_5_reg_215;

assign buffer_1_address0 = grp_calculate_fu_78_a_address0;

assign buffer_1_address1 = grp_calculate_fu_78_a_address1;

assign buffer_1_ce0 = grp_calculate_fu_78_a_ce0;

assign buffer_1_ce1 = grp_calculate_fu_78_a_ce1;

assign buffer_2_address0 = zext_ln201_reg_195;

assign buffer_2_d0 = ((and_ln32_fu_164_p2[0:0] == 1'b1) ? a_assign_5_reg_215 : 32'd0);

assign grp_calculate_fu_78_ap_start = grp_calculate_fu_78_ap_start_reg;

assign grp_calculate_fu_78_b_offset = i_reg_185[4:0];

assign grp_fu_479_p_ce = 1'b1;

assign grp_fu_479_p_din0 = a_assign_5_reg_215;

assign grp_fu_479_p_din1 = 32'd0;

assign grp_fu_479_p_opcode = 5'd2;

assign grp_fu_705_p_ce = 1'b1;

assign grp_fu_705_p_din0 = val_reg_210;

assign grp_fu_705_p_din1 = bias_2_pos_load_reg_205;

assign grp_fu_705_p_opcode = 2'd0;

assign icmp_ln201_fu_104_p2 = ((ap_sig_allocacmp_i == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_152_p2 = ((trunc_ln32_fu_142_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_146_p2 = ((tmp_s_fu_132_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln32_fu_158_p2 = (icmp_ln32_fu_146_p2 | icmp_ln32_2_fu_152_p2);

assign tmp_s_fu_132_p4 = {{bitcast_ln32_fu_129_p1[30:23]}};

assign trunc_ln32_fu_142_p1 = bitcast_ln32_fu_129_p1[22:0];

assign weights_2_pos_address0 = grp_calculate_fu_78_b_address0;

assign weights_2_pos_address1 = grp_calculate_fu_78_b_address1;

assign weights_2_pos_ce0 = grp_calculate_fu_78_b_ce0;

assign weights_2_pos_ce1 = grp_calculate_fu_78_b_ce1;

assign zext_ln201_fu_125_p1 = i_reg_185_pp0_iter9_reg;

always @ (posedge ap_clk) begin
    zext_ln201_reg_195[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //mlp_dance3_mlp_dance3_Pipeline_layer2_pos
