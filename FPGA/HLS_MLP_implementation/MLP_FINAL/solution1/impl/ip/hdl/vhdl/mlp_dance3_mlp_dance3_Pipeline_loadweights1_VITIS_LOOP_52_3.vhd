-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mlp_dance3_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    S_AXIS_V_TVALID : IN STD_LOGIC;
    weights_1_7_2_024 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_7_1_023 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_7_0_022 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_6_2_021 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_6_1_020 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_6_0_019 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_5_2_018 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_5_1_017 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_5_0_016 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_4_2_015 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_4_1_014 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_4_0_013 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_3_2_012 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_3_1_011 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_3_0_010 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_2_2_09 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_2_1_08 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_2_0_07 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_1_2_06 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_1_1_05 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_1_0_04 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_0_2_03 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_0_1_02 : IN STD_LOGIC_VECTOR (31 downto 0);
    weights_1_0_0_01 : IN STD_LOGIC_VECTOR (31 downto 0);
    S_AXIS_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    S_AXIS_V_TREADY : OUT STD_LOGIC;
    weights_1_7_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_7_2_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_7_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_7_1_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_7_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_7_0_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_6_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_6_2_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_6_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_6_1_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_6_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_6_0_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_5_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_5_2_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_5_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_5_1_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_5_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_5_0_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_4_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_4_2_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_4_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_4_1_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_4_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_4_0_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_3_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_3_2_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_3_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_3_1_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_3_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_3_0_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_2_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_2_2_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_2_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_2_1_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_2_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_2_0_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_1_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_1_2_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_1_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_1_1_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_1_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_1_0_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_0_2_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_0_2_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_0_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_0_1_2_out_ap_vld : OUT STD_LOGIC;
    weights_1_0_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    weights_1_0_0_2_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of mlp_dance3_mlp_dance3_Pipeline_loadweights1_VITIS_LOOP_52_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln51_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal S_AXIS_V_TDATA_blk_n : STD_LOGIC;
    signal j_fu_162 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln52_fu_904_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_fu_166 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln51_1_fu_764_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten7_fu_170 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_indvar_flatten7_load : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln51_1_fu_732_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal weights_1_7_1_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_25_fu_776_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln54_fu_780_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal weights_1_7_1_1_fu_178 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_3_fu_182 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_4_fu_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_5_fu_190 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_6_fu_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_7_fu_198 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_8_fu_202 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_9_fu_206 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_10_fu_210 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_11_fu_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_12_fu_218 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_13_fu_222 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_14_fu_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_15_fu_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_16_fu_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_17_fu_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_18_fu_242 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_19_fu_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_20_fu_250 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_21_fu_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_22_fu_258 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_2_fu_262 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_1_7_1_23_fu_266 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln52_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln51_fu_744_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln145_fu_772_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln51_fu_756_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_409 : BOOLEAN;
    signal ap_condition_215 : BOOLEAN;
    signal ap_condition_221 : BOOLEAN;
    signal ap_condition_228 : BOOLEAN;
    signal ap_condition_237 : BOOLEAN;
    signal ap_condition_243 : BOOLEAN;
    signal ap_condition_250 : BOOLEAN;
    signal ap_condition_259 : BOOLEAN;
    signal ap_condition_265 : BOOLEAN;
    signal ap_condition_272 : BOOLEAN;
    signal ap_condition_281 : BOOLEAN;
    signal ap_condition_153 : BOOLEAN;
    signal ap_condition_287 : BOOLEAN;
    signal ap_condition_294 : BOOLEAN;
    signal ap_condition_303 : BOOLEAN;
    signal ap_condition_316 : BOOLEAN;
    signal ap_condition_309 : BOOLEAN;
    signal ap_condition_162 : BOOLEAN;
    signal ap_condition_171 : BOOLEAN;
    signal ap_condition_177 : BOOLEAN;
    signal ap_condition_184 : BOOLEAN;
    signal ap_condition_193 : BOOLEAN;
    signal ap_condition_199 : BOOLEAN;
    signal ap_condition_206 : BOOLEAN;
    signal ap_condition_144 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component mlp_dance3_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component mlp_dance3_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((icmp_ln51_fu_726_p2 = ap_const_lv1_0)) then 
                    i_fu_166 <= select_ln51_1_fu_764_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_166 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten7_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((icmp_ln51_fu_726_p2 = ap_const_lv1_0)) then 
                    indvar_flatten7_fu_170 <= add_ln51_1_fu_732_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten7_fu_170 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((icmp_ln51_fu_726_p2 = ap_const_lv1_0)) then 
                    j_fu_162 <= add_ln52_fu_904_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_162 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_10_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_215)) then 
                    weights_1_7_1_10_fu_210 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_10_fu_210 <= weights_1_3_0_010;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_11_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_221)) then 
                    weights_1_7_1_11_fu_214 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_11_fu_214 <= weights_1_3_1_011;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_12_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_228)) then 
                    weights_1_7_1_12_fu_218 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_12_fu_218 <= weights_1_3_2_012;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_13_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_237)) then 
                    weights_1_7_1_13_fu_222 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_13_fu_222 <= weights_1_4_0_013;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_14_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_243)) then 
                    weights_1_7_1_14_fu_226 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_14_fu_226 <= weights_1_4_1_014;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_15_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_250)) then 
                    weights_1_7_1_15_fu_230 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_15_fu_230 <= weights_1_4_2_015;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_16_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_259)) then 
                    weights_1_7_1_16_fu_234 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_16_fu_234 <= weights_1_5_0_016;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_17_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_265)) then 
                    weights_1_7_1_17_fu_238 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_17_fu_238 <= weights_1_5_1_017;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_18_fu_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_272)) then 
                    weights_1_7_1_18_fu_242 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_18_fu_242 <= weights_1_5_2_018;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_19_fu_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_281)) then 
                    weights_1_7_1_19_fu_246 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_19_fu_246 <= weights_1_6_0_019;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_1_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_153)) then 
                    weights_1_7_1_1_fu_178 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_1_fu_178 <= weights_1_0_1_02;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_20_fu_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_287)) then 
                    weights_1_7_1_20_fu_250 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_20_fu_250 <= weights_1_6_1_020;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_21_fu_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_294)) then 
                    weights_1_7_1_21_fu_254 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_21_fu_254 <= weights_1_6_2_021;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_22_fu_258_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_303)) then 
                    weights_1_7_1_22_fu_258 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_22_fu_258 <= weights_1_7_0_022;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_23_fu_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_316)) then 
                    weights_1_7_1_23_fu_266 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_23_fu_266 <= weights_1_7_2_024;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_2_fu_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_309)) then 
                    weights_1_7_1_2_fu_262 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_2_fu_262 <= weights_1_7_1_023;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_3_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_162)) then 
                    weights_1_7_1_3_fu_182 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_3_fu_182 <= weights_1_0_2_03;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_4_fu_186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_171)) then 
                    weights_1_7_1_4_fu_186 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_4_fu_186 <= weights_1_1_0_04;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_5_fu_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_177)) then 
                    weights_1_7_1_5_fu_190 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_5_fu_190 <= weights_1_1_1_05;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_6_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_184)) then 
                    weights_1_7_1_6_fu_194 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_6_fu_194 <= weights_1_1_2_06;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_7_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_193)) then 
                    weights_1_7_1_7_fu_198 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_7_fu_198 <= weights_1_2_0_07;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_8_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_199)) then 
                    weights_1_7_1_8_fu_202 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_8_fu_202 <= weights_1_2_1_08;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_9_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_206)) then 
                    weights_1_7_1_9_fu_206 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_9_fu_206 <= weights_1_2_2_09;
                end if;
            end if; 
        end if;
    end process;

    weights_1_7_1_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_409)) then
                if ((ap_const_boolean_1 = ap_condition_144)) then 
                    weights_1_7_1_fu_174 <= weights_1_7_1_25_fu_776_p1;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    weights_1_7_1_fu_174 <= weights_1_0_0_01;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    S_AXIS_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            S_AXIS_V_TDATA_blk_n <= S_AXIS_V_TVALID;
        else 
            S_AXIS_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    S_AXIS_V_TREADY_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            S_AXIS_V_TREADY <= ap_const_logic_1;
        else 
            S_AXIS_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    add_ln51_1_fu_732_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten7_load) + unsigned(ap_const_lv5_1));
    add_ln51_fu_744_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv2_1));
    add_ln52_fu_904_p2 <= std_logic_vector(unsigned(select_ln51_fu_756_p3) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)));
    end process;


    ap_condition_144_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_144 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_0) and (select_ln51_1_fu_764_p3 = ap_const_lv2_0));
    end process;


    ap_condition_153_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_153 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_0) and (select_ln51_1_fu_764_p3 = ap_const_lv2_1));
    end process;


    ap_condition_162_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_162 <= (not((select_ln51_1_fu_764_p3 = ap_const_lv2_1)) and not((select_ln51_1_fu_764_p3 = ap_const_lv2_0)) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_0));
    end process;


    ap_condition_171_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_171 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_1) and (select_ln51_1_fu_764_p3 = ap_const_lv2_0));
    end process;


    ap_condition_177_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_177 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_1) and (select_ln51_1_fu_764_p3 = ap_const_lv2_1));
    end process;


    ap_condition_184_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_184 <= (not((select_ln51_1_fu_764_p3 = ap_const_lv2_1)) and not((select_ln51_1_fu_764_p3 = ap_const_lv2_0)) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_1));
    end process;


    ap_condition_193_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_193 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_2) and (select_ln51_1_fu_764_p3 = ap_const_lv2_0));
    end process;


    ap_condition_199_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_199 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_2) and (select_ln51_1_fu_764_p3 = ap_const_lv2_1));
    end process;


    ap_condition_206_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_206 <= (not((select_ln51_1_fu_764_p3 = ap_const_lv2_1)) and not((select_ln51_1_fu_764_p3 = ap_const_lv2_0)) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_2));
    end process;


    ap_condition_215_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_215 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_3) and (select_ln51_1_fu_764_p3 = ap_const_lv2_0));
    end process;


    ap_condition_221_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_221 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_3) and (select_ln51_1_fu_764_p3 = ap_const_lv2_1));
    end process;


    ap_condition_228_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_228 <= (not((select_ln51_1_fu_764_p3 = ap_const_lv2_1)) and not((select_ln51_1_fu_764_p3 = ap_const_lv2_0)) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_3));
    end process;


    ap_condition_237_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_237 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_4) and (select_ln51_1_fu_764_p3 = ap_const_lv2_0));
    end process;


    ap_condition_243_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_243 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_4) and (select_ln51_1_fu_764_p3 = ap_const_lv2_1));
    end process;


    ap_condition_250_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_250 <= (not((select_ln51_1_fu_764_p3 = ap_const_lv2_1)) and not((select_ln51_1_fu_764_p3 = ap_const_lv2_0)) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_4));
    end process;


    ap_condition_259_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_259 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_5) and (select_ln51_1_fu_764_p3 = ap_const_lv2_0));
    end process;


    ap_condition_265_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_265 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_5) and (select_ln51_1_fu_764_p3 = ap_const_lv2_1));
    end process;


    ap_condition_272_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_272 <= (not((select_ln51_1_fu_764_p3 = ap_const_lv2_1)) and not((select_ln51_1_fu_764_p3 = ap_const_lv2_0)) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_5));
    end process;


    ap_condition_281_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_281 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_6) and (select_ln51_1_fu_764_p3 = ap_const_lv2_0));
    end process;


    ap_condition_287_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_287 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_6) and (select_ln51_1_fu_764_p3 = ap_const_lv2_1));
    end process;


    ap_condition_294_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_294 <= (not((select_ln51_1_fu_764_p3 = ap_const_lv2_1)) and not((select_ln51_1_fu_764_p3 = ap_const_lv2_0)) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_6));
    end process;


    ap_condition_303_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_303 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_7) and (select_ln51_1_fu_764_p3 = ap_const_lv2_0));
    end process;


    ap_condition_309_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_309 <= ((icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_7) and (select_ln51_1_fu_764_p3 = ap_const_lv2_1));
    end process;


    ap_condition_316_assign_proc : process(icmp_ln51_fu_726_p2, select_ln51_1_fu_764_p3, trunc_ln54_fu_780_p1)
    begin
                ap_condition_316 <= (not((select_ln51_1_fu_764_p3 = ap_const_lv2_1)) and not((select_ln51_1_fu_764_p3 = ap_const_lv2_0)) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0) and (trunc_ln54_fu_780_p1 = ap_const_lv3_7));
    end process;


    ap_condition_409_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
                ap_condition_409 <= (not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_loop_exit_ready, ap_done_reg, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, i_fu_166)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv2_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_166;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten7_load_assign_proc : process(ap_CS_fsm_state1, ap_loop_init, indvar_flatten7_fu_170)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten7_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvar_flatten7_load <= indvar_flatten7_fu_170;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_state1, j_fu_162, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_162;
        end if; 
    end process;

    icmp_ln51_fu_726_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten7_load = ap_const_lv5_18) else "0";
    icmp_ln52_fu_750_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv4_8) else "0";
    select_ln51_1_fu_764_p3 <= 
        add_ln51_fu_744_p2 when (icmp_ln52_fu_750_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln51_fu_756_p3 <= 
        ap_const_lv4_0 when (icmp_ln52_fu_750_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    trunc_ln145_fu_772_p1 <= S_AXIS_V_TDATA(32 - 1 downto 0);
    trunc_ln54_fu_780_p1 <= select_ln51_fu_756_p3(3 - 1 downto 0);
    weights_1_0_0_2_out <= weights_1_7_1_fu_174;

    weights_1_0_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_0_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_0_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_0_1_2_out <= weights_1_7_1_1_fu_178;

    weights_1_0_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_0_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_0_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_0_2_2_out <= weights_1_7_1_3_fu_182;

    weights_1_0_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_0_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_0_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_1_0_2_out <= weights_1_7_1_4_fu_186;

    weights_1_1_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_1_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_1_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_1_1_2_out <= weights_1_7_1_5_fu_190;

    weights_1_1_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_1_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_1_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_1_2_2_out <= weights_1_7_1_6_fu_194;

    weights_1_1_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_1_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_1_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_2_0_2_out <= weights_1_7_1_7_fu_198;

    weights_1_2_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_2_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_2_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_2_1_2_out <= weights_1_7_1_8_fu_202;

    weights_1_2_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_2_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_2_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_2_2_2_out <= weights_1_7_1_9_fu_206;

    weights_1_2_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_2_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_2_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_3_0_2_out <= weights_1_7_1_10_fu_210;

    weights_1_3_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_3_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_3_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_3_1_2_out <= weights_1_7_1_11_fu_214;

    weights_1_3_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_3_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_3_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_3_2_2_out <= weights_1_7_1_12_fu_218;

    weights_1_3_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_3_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_3_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_4_0_2_out <= weights_1_7_1_13_fu_222;

    weights_1_4_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_4_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_4_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_4_1_2_out <= weights_1_7_1_14_fu_226;

    weights_1_4_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_4_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_4_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_4_2_2_out <= weights_1_7_1_15_fu_230;

    weights_1_4_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_4_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_4_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_5_0_2_out <= weights_1_7_1_16_fu_234;

    weights_1_5_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_5_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_5_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_5_1_2_out <= weights_1_7_1_17_fu_238;

    weights_1_5_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_5_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_5_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_5_2_2_out <= weights_1_7_1_18_fu_242;

    weights_1_5_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_5_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_5_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_6_0_2_out <= weights_1_7_1_19_fu_246;

    weights_1_6_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_6_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_6_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_6_1_2_out <= weights_1_7_1_20_fu_250;

    weights_1_6_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_6_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_6_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_6_2_2_out <= weights_1_7_1_21_fu_254;

    weights_1_6_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_6_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_6_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_7_0_2_out <= weights_1_7_1_22_fu_258;

    weights_1_7_0_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_7_0_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_7_0_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_7_1_25_fu_776_p1 <= trunc_ln145_fu_772_p1;
    weights_1_7_1_2_out <= weights_1_7_1_2_fu_262;

    weights_1_7_1_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_7_1_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_7_1_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    weights_1_7_2_2_out <= weights_1_7_1_23_fu_266;

    weights_1_7_2_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state1, S_AXIS_V_TVALID, icmp_ln51_fu_726_p2, ap_start_int)
    begin
        if ((not(((ap_start_int = ap_const_logic_0) or ((ap_const_logic_0 = S_AXIS_V_TVALID) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0)))) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            weights_1_7_2_2_out_ap_vld <= ap_const_logic_1;
        else 
            weights_1_7_2_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
